{"version":3,"sources":["components/Home/index.tsx","hooks/useShallowEqualSelector.ts","hooks/useActions.ts","modules/Auth/actions.ts","components/MainMenu/index.tsx","components/Chat/index.tsx","services/auth.ts","components/Login/index.tsx","components/Register/index.tsx","components/Recover/index.tsx","components/ChangePassword/index.tsx","components/Activation/index.tsx","components/PrivateRoute/index.tsx","components/App/index.tsx","reportWebVitals.ts","modules/Auth/sagas.ts","modules/Auth/reducer.ts","modules/index.ts","store.ts","index.tsx"],"names":["Home","className","src","style","width","maxWidth","alt","useShallowEqualSelector","selector","useSelector","shallowEqual","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","map","a","bindActionCreators","AUTH_USER_FETCH_REQUEST","setUser","createAction","setToken","logoutUserRequest","fetchUserRequest","fetchUserSuccess","fetchUserFailure","unauthorizedItems","key","name","label","path","icon","PieChartOutlined","authorizedItems","MainMenu","useState","selectedKey","setSelectedKey","location","useLocation","history","useHistory","user","state","auth","dispatchLogoutUserRequest","menuItems","useCallback","findSelectedKey","selectedItem","find","item","pathname","useEffect","float","mode","selectedKeys","onClick","clicked","_item","push","Item","Chat","AUTH_TOKEN_STORAGE_KEY","makeError","error","response","data","status","message","type","AuthService","getAllUsers","send","method","endpoint","register","payload","activate","code","login","fetchByToken","recover","checkSecret","changePassword","getToken","localStorage","getItem","setItem","removeToken","removeItem","axios","interceptors","request","use","config","token","headers","Authorization","Login","emptyMessage","Form","useForm","form","alert","setAlert","loading","setLoading","dispatchSetUser","dispatchSetToken","onFinish","values","email","password","authService","title","initialValues","remember","rules","required","min","prefix","MailOutlined","placeholder","size","Password","LockOutlined","noStyle","to","indicator","LoadingOutlined","fontSize","spin","delay","htmlType","block","Register","resetFields","validateTrigger","pattern","UserOutlined","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","disabled","Recover","ChangePassword","useParams","secretError","setSecretError","changeSuccess","setChangeSuccess","secretType","match","Activation","activateUser","PrivateRoute","props","Component","component","children","rest","render","routeProps","from","defaultProps","undefined","Header","Layout","Content","Footer","Sider","App","collapsed","setCollapsed","toggle","event","preventDefault","minHeight","theme","collapsible","trigger","DesktopOutlined","MenuUnfoldOutlined","MenuFoldOutlined","exact","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setTokenFlow","setTokenWatcher","logoutUserRequestFlow","userLogoutWatcher","fetchUserByTokenFlow","fetchUserByTokenWatcher","generator","call","takeLatest","put","takeLeading","fork","handleActions","_state","action","combineReducers","rootSaga","authSagas","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","document","getElementById"],"mappings":"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","file":"static/js/main.7374995f.chunk.js","sourcesContent":["import { FC } from 'react'\n\nconst Home: FC = () => (\n  <div className=\"flex-center flex-column\">\n    <h1>Коротко о Svelte</h1>\n    <img\n      src=\"/images/svelte.png\"\n      style={{ width: 700, maxWidth: '100%' }}\n      alt=\"Коротко о Svelte\"\n    />\n  </div>\n)\n\nexport default Home\n","import { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from '../modules'\n\nconst useShallowEqualSelector = (selector: any) =>\n  useSelector<RootState>(selector, shallowEqual)\n\nexport default useShallowEqualSelector\n","import { bindActionCreators } from 'redux'\nimport { useDispatch } from 'react-redux'\nimport { useMemo } from 'react'\n\nconst useActions = (actions, deps) => {\n  const dispatch = useDispatch()\n\n  return useMemo(\n    () => {\n      if (Array.isArray(actions)) {\n        return actions.map((a) => bindActionCreators(a, dispatch))\n      }\n      return bindActionCreators(actions, dispatch)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps ? [dispatch, ...deps] : [dispatch]\n  )\n}\n\nexport default useActions\n","import { createAction } from 'redux-actions'\r\n\r\nexport const AUTH_USER_FETCH_REQUEST = 'AUTH/USER_FETCH_REQUEST'\r\n\r\n/** Записать объект пользователя в стор */\r\nexport const setUser: any = createAction('AUTH/SET_USER')\r\n\r\n/** Записать токен пользователя в стор */\r\nexport const setToken: any = createAction('AUTH/USER_SET_TOKEN')\r\n\r\n/** Выход пользователя из системы (logout) */\r\nexport const logoutUserRequest: any = createAction('AUTH/USER_LOGOUT_REQUEST')\r\n\r\n/** Получить объект пользователя по токену */\r\nexport const fetchUserRequest: any = createAction(AUTH_USER_FETCH_REQUEST)\r\n/** Записать объект пользователя в стор */\r\nexport const fetchUserSuccess: any = createAction('AUTH/USER_FETCH_SUCCESS')\r\n/** Ошибка получения объекта пользователя */\r\nexport const fetchUserFailure: any = createAction('AUTH/USER_FETCH_FAILURE')\r\n","import { FC, useState, useEffect, useCallback } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { PieChartOutlined } from '@ant-design/icons'\nimport { Menu } from 'antd'\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector'\nimport useActions from '../../hooks/useActions'\nimport { logoutUserRequest } from '../../modules/Auth/actions'\n\nconst unauthorizedItems = [\n  {\n    key: '1',\n    name: 'login',\n    label: 'Войти',\n    path: '/auth/login',\n    icon: <PieChartOutlined />\n  },\n  {\n    key: '2',\n    name: 'register',\n    label: 'Регистрация',\n    path: '/auth/register',\n    icon: <PieChartOutlined />\n  }\n]\n\nconst authorizedItems = [\n  {\n    key: '1',\n    name: 'home',\n    label: 'Главная',\n    path: '/',\n    icon: <PieChartOutlined />\n  },\n  {\n    key: '2',\n    name: 'logout',\n    label: 'Выйти',\n    path: '/auth/logout',\n    icon: <PieChartOutlined />\n  }\n]\n\nconst MainMenu: FC = () => {\n  const [selectedKey, setSelectedKey] = useState('')\n  const location = useLocation()\n  const history = useHistory()\n  const user = useShallowEqualSelector((state) => state.auth.user)\n\n  const [dispatchLogoutUserRequest] = useActions([logoutUserRequest], null)\n\n  const menuItems = useCallback(\n    () => (user ? authorizedItems : unauthorizedItems),\n    [user]\n  )\n\n  const onClickMenu = (item) => {\n    const clicked = menuItems().find((_item) => _item.key === item.key)\n    if (clicked.name === 'logout') {\n      dispatchLogoutUserRequest()\n      history.push('/auth/login')\n      return\n    }\n\n    history.push(clicked!.path)\n  }\n\n  const findSelectedKey = useCallback(() => {\n    const selectedItem = menuItems().find(\n      (item) => location.pathname === item.path\n    )\n    return selectedItem?.key || ''\n  }, [location.pathname, menuItems])\n\n  useEffect(() => {\n    setSelectedKey(findSelectedKey())\n  }, [location, findSelectedKey])\n\n  return (\n    <Menu\n      style={{ float: 'right' }}\n      mode=\"horizontal\"\n      selectedKeys={[selectedKey]}\n      onClick={onClickMenu}\n    >\n      {menuItems().map((item) => (\n        <Menu.Item key={item.key} icon={item.icon}>\n          {item.label}\n        </Menu.Item>\n      ))}\n    </Menu>\n  )\n}\n\nexport default MainMenu\n","const Chat = () => <h1>Chat window</h1>\n\nexport default Chat\n","import axios, { AxiosRequestConfig } from 'axios'\n\nexport interface ServerResponse {\n  type: any\n  message?: string\n  data?: any\n  errors?: string[]\n  token?: string\n}\n\nexport interface UserLoginRequestDTO {\n  email: string\n  password: string\n}\n\nexport interface UserCreateRequestDTO {\n  name: string\n  email: string\n  password: string\n}\n\nexport interface UserDTO {\n  id: number\n  name: string\n  email: string\n  role: string\n}\n\nexport interface UserRecoverPasswordRequestDTO {\n  email: string\n}\n\nexport interface CheckSecretRequestDTO {\n  code: string\n  secretType: string\n}\n\nexport interface ChangePasswordRequestDTO {\n  code: string\n  password: string\n}\n\nexport interface UserFetchByTokenRequestDTO {\n  token: string\n}\n\n/** Сообщение при недоступном соединении */\nconst SERVER_UNAVAILABLE =\n  'Сервер не отвечает или временно недоступен. Попробуйте повторить запрос позднее.'\n\n/** Ключ, по которому в localStorage хранится токен */\nconst AUTH_TOKEN_STORAGE_KEY = 'auth'\n\n/** Отказ в предоставлении ресурса из-за неверного токена */\nconst AUTH_REJECTION_MESSAGE =\n  'Войдите или зарегистрируйтесь для просмотра данного содержимого.'\n\nconst makeError = (error: any): ServerResponse => {\n  const {\n    response: { data, status }\n  } = error\n\n  if (typeof data === 'string' && (status === 502 || status === 500)) {\n    return {\n      type: 'error',\n      message: SERVER_UNAVAILABLE\n    }\n  }\n\n  /** Неверный токен */\n  if (data?.message === 'No authorization token was found') {\n    return {\n      type: 'error',\n      message: AUTH_REJECTION_MESSAGE\n    }\n  }\n\n  return data\n}\n\nconst AuthService = {\n  /** Получить список всех пользователей */\n  getAllUsers: async (): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'get',\n      endpoint: '/api/v1/auth/users'\n    }),\n  /** Регистрация нового пользователя */\n  register: async (payload: UserCreateRequestDTO): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'put',\n      endpoint: '/api/v1/auth/register',\n      payload\n    }),\n\n  /** Активация пользователя по коду из письма */\n  activate: async (code: string): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'patch',\n      endpoint: `/api/v1/auth/activate/${code}`\n    }),\n\n  /** Вход пользователя в систему и полуение токена */\n  login: async (payload: UserLoginRequestDTO): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/login',\n      payload\n    }),\n\n  /** Попытка получить объект пользователя по токену */\n  fetchByToken: async (\n    payload: UserFetchByTokenRequestDTO\n  ): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/fetch-by-token',\n      payload\n    }),\n\n  /** Запрос на изменение пароля, отправка письма со ссылкой на email */\n  recover: async (\n    payload: UserRecoverPasswordRequestDTO\n  ): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/recover',\n      payload\n    }),\n\n  /** Проверка секретного ключа для доступа к форме восстановления пароля */\n  checkSecret: async (\n    payload: CheckSecretRequestDTO\n  ): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/check-secret',\n      payload\n    }),\n\n  /** Изменение пароля пользователя */\n  changePassword: async (\n    payload: ChangePasswordRequestDTO\n  ): Promise<ServerResponse> =>\n    AuthService.send({\n      method: 'patch',\n      endpoint: '/api/v1/auth/change-password',\n      payload\n    }),\n\n  getToken: (): string | null => localStorage.getItem(AUTH_TOKEN_STORAGE_KEY),\n\n  setToken: (payload: string): void =>\n    localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, payload),\n\n  removeToken: (): void => localStorage.removeItem(AUTH_TOKEN_STORAGE_KEY),\n\n  send: async ({ method, endpoint, payload = {} }): Promise<ServerResponse> => {\n    try {\n      const response = await axios[method](endpoint, payload)\n      return response.data\n    } catch (error) {\n      return makeError(error)\n    }\n  }\n}\n\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig) => {\n    const token = AuthService.getToken()\n\n    if (token) {\n      // eslint-disable-next-line no-param-reassign\n      config.headers = {\n        Authorization: `Bearer ${token}`\n      }\n    }\n\n    return config\n  },\n  (error) => makeError(error)\n)\n\nexport default AuthService\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport { MailOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons'\nimport { Link, useHistory } from 'react-router-dom'\nimport useActions from '../../hooks/useActions'\nimport authService from '../../services/auth'\nimport { setUser, setToken } from '../../modules/Auth/actions'\n\ninterface FormValues {\n  email: string\n  password: string\n}\n\nconst Login: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n  const [dispatchSetUser, dispatchSetToken] = useActions(\n    [setUser, setToken],\n    null\n  )\n  const history = useHistory()\n\n  const onFinish = async (values: FormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { email, password } = values\n      const { type, message, token, data } = await authService.login({\n        email,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      dispatchSetUser(data)\n      dispatchSetToken(token)\n\n      setLoading(false)\n\n      history.push('/')\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Войти\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Form\n          form={form}\n          name=\"login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: 'email',\n                min: 4,\n                message: 'Некорректный email'\n              }\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, min: 6, message: 'Минимум 6 символов' }]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Form.Item name=\"register\" noStyle>\n              <Link to=\"/auth/register\">Регистрация</Link>\n            </Form.Item>\n\n            <Link className=\"link-recover\" to=\"/auth/recover\">\n              Забыли пароль?\n            </Link>\n          </Form.Item>\n\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\n            Войти\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Login\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailOutlined,\n  LoadingOutlined\n} from '@ant-design/icons'\nimport authService from '../../services/auth'\n\ninterface FormValues {\n  name: string\n  email: string\n  password: string\n}\n\nconst Register: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values: FormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { name, email, password } = values\n      const { type, message } = await authService.register({\n        name,\n        email,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      form.resetFields()\n      setLoading(false)\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Регистрация\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Form\n          form={form}\n          name=\"register\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          validateTrigger=\"onBlur\"\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message:\n                  \"Имя должно содержать минимум 4 символа английского или русского алфавита, допустимы цифры и знаки '- _'\",\n                pattern: /^[a-zA-Zа-яА-ЯёЁ0-9-_\\s]{4,}$/\n              }\n            ]}\n          >\n            <Input placeholder=\"Имя\" size=\"large\" prefix={<UserOutlined />} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[\n              { required: true, type: 'email', message: 'Некорректный email' }\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Введите пароль! Минимум 6 символов.',\n                min: 6\n              }\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm-password\"\n            dependencies={['password']}\n            rules={[\n              {\n                required: true,\n                message: 'Введите подтверждение пароля! Минимум 6 символов.',\n                min: 6\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('Пароли должны совпадать!'))\n                }\n              })\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль еще раз\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n\n          <Button\n            className=\"submit-button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            block\n            disabled={loading}\n          >\n            Зарегистрироваться\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Register\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport { MailOutlined, LoadingOutlined } from '@ant-design/icons'\nimport authService from '../../services/auth'\n\ninterface FormValues {\n  email: string\n}\n\nconst Recover: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values: FormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { email } = values\n      const { type, message } = await authService.recover({\n        email\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      form.resetFields()\n      setLoading(false)\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Восстановление пароля\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        {alert.type !== 'success' && (\n          <>\n            <p>\n              Укажите email, указанный при регистрации и мы вышлем на него\n              ссылку для восстановления пароля.\n            </p>\n            <Form\n              form={form}\n              name=\"recover\"\n              className=\"login-form\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n              validateTrigger=\"onBlur\"\n            >\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    type: 'email',\n                    message: 'Некорректный email!'\n                  }\n                ]}\n              >\n                <Input\n                  prefix={<MailOutlined />}\n                  placeholder=\"Email\"\n                  size=\"large\"\n                />\n              </Form.Item>\n\n              {loading && (\n                <Spin\n                  className=\"center\"\n                  indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n                  delay={500}\n                />\n              )}\n\n              <Button\n                size=\"large\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                block\n                disabled={loading}\n              >\n                Восстановить пароль\n              </Button>\n            </Form>\n          </>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport default Recover\n","import { FC, useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { Form, Input, Button, Card, Alert } from 'antd'\nimport { LockOutlined } from '@ant-design/icons'\nimport authService from '../../services/auth'\n\ninterface ChangePasswordParams {\n  code?: string\n}\n\ninterface FormValues {\n  password: string\n  confirmPassword: string\n}\n\nconst ChangePassword: FC = () => {\n  const { code }: ChangePasswordParams = useParams()\n  const emptyMessage = { type: '', message: '' }\n  const [alert, setAlert] = useState(emptyMessage)\n  const [secretError, setSecretError] = useState(false)\n  const [changeSuccess, setChangeSuccess] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const checkSecret = async () => {\n      const { type, message } = await authService.checkSecret({\n        code,\n        secretType: 'RECOVER_PASSWORD'\n      })\n      if (type === 'error') {\n        setAlert({ type, message })\n        setSecretError(true)\n      }\n    }\n\n    if (\n      code.match(\n        /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i\n      )\n    ) {\n      checkSecret()\n    } else {\n      setAlert({ type: 'error', message: 'Неверный секретный код!' })\n      setSecretError(true)\n    }\n  }, [code])\n\n  const onFinish = async (values: FormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { password } = values\n      const { type, message } = await authService.changePassword({\n        code,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      setChangeSuccess(true)\n      setLoading(false)\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Изменение пароля\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n\n        {changeSuccess && (\n          <p>\n            Теперь Вы можете <Link to=\"/auth/login\">Войти</Link> в приложение\n          </p>\n        )}\n\n        {!secretError && !changeSuccess && (\n          <>\n            <p>Придумайте новый пароль</p>\n            <Form\n              name=\"change-password-request\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: 'Введите пароль!' }]}\n              >\n                <Input.Password\n                  placeholder=\"Пароль\"\n                  prefix={<LockOutlined />}\n                  size=\"large\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirmPassword\"\n                dependencies={['password']}\n                rules={[\n                  { required: true, message: 'Введите подтверждение пароля!' },\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      if (!value || getFieldValue('password') === value) {\n                        return Promise.resolve()\n                      }\n                      return Promise.reject(\n                        new Error('Пароли должны совпадать!')\n                      )\n                    }\n                  })\n                ]}\n              >\n                <Input.Password\n                  placeholder=\"Пароль еще раз\"\n                  prefix={<LockOutlined />}\n                  size=\"large\"\n                />\n              </Form.Item>\n\n              <Button\n                className=\"submit-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                size=\"large\"\n                block\n                disabled={loading}\n              >\n                Изменить пароль\n              </Button>\n            </Form>\n          </>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import { FC, useState, useEffect } from 'react'\nimport { Card, Alert } from 'antd'\nimport { Link, useParams } from 'react-router-dom'\nimport authService from '../../services/auth'\n\ninterface ActivationParams {\n  code?: string\n}\n\nconst Activation: FC = () => {\n  const { code }: ActivationParams = useParams()\n  const emptyMessage = { type: '', message: '' }\n  const [alert, setAlert] = useState(emptyMessage)\n\n  useEffect(() => {\n    const activateUser = async () => {\n      const { type, message } = await authService.activate(code)\n      if (message) {\n        setAlert({ type, message })\n      }\n    }\n    activateUser()\n  }, [code])\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Активация нового пользователя\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Link className=\"login-link\" to=\"/auth/login\">\n          Вход\n        </Link>\n        <Link className=\"link-recover\" to=\"/auth/recover\">\n          Восстановить пароль\n        </Link>\n      </Card>\n    </div>\n  )\n}\n\nexport default Activation\n","import { FC } from 'react'\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom'\r\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector'\r\n\r\ninterface PrivateRouteProps extends RouteProps {\r\n  component?: any\r\n  children: any\r\n}\r\n\r\nconst PrivateRoute: FC<PrivateRouteProps> = (props: PrivateRouteProps) => {\r\n  const { component: Component, children, ...rest } = props\r\n  const user = useShallowEqualSelector((state) => state.auth.user)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        user === false ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/auth/login',\r\n              state: { from: routeProps.location }\r\n            }}\r\n          />\r\n        ) : user === null ? null : Component ? (\r\n          <Component {...routeProps} />\r\n        ) : (\r\n          children\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.defaultProps = {\r\n  component: undefined\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { FC, SyntheticEvent, useState } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Layout, Menu } from 'antd'\nimport {\n  DesktopOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined\n} from '@ant-design/icons'\n\nimport Home from '../Home'\nimport MainMenu from '../MainMenu'\nimport Chat from '../Chat'\nimport Login from '../Login'\nimport Register from '../Register'\nimport Recover from '../Recover'\nimport ChangePassword from '../ChangePassword'\nimport Activation from '../Activation'\nimport PrivateRoute from '../PrivateRoute'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nconst App: FC = () => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  const toggle = (event: SyntheticEvent): void => {\n    event.preventDefault()\n    setCollapsed(!collapsed)\n  }\n\n  return (\n    <>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider theme=\"light\" collapsible trigger={null} collapsed={collapsed}>\n          <Menu mode=\"inline\">\n            <Menu.Item key=\"1\" icon={<DesktopOutlined />}>\n              Комната 1\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n              Комната 2\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"header site-layout-background\">\n            {collapsed ? (\n              <MenuUnfoldOutlined className=\"trigger\" onClick={toggle} />\n            ) : (\n              <MenuFoldOutlined className=\"trigger\" onClick={toggle} />\n            )}\n            <MainMenu />\n          </Header>\n          <Content className=\"content\">\n            <Switch>\n              <PrivateRoute path=\"/\" exact>\n                <Home />\n              </PrivateRoute>\n              <Route path=\"/auth/login\">\n                <Login />\n              </Route>\n              <Route path=\"/auth/register\">\n                <Register />\n              </Route>\n              <Route path=\"/auth/activation/:code\">\n                <Activation />\n              </Route>\n              <Route path=\"/auth/recover\">\n                <Recover />\n              </Route>\n              <Route path=\"/auth/change-password/:code\">\n                <ChangePassword />\n              </Route>\n              <Route path=\"/chat\">\n                <Chat />\n              </Route>\n              <Route path=\"*\">\n                <Redirect to=\"/auth/login\" />\n              </Route>\n            </Switch>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>© [Пишем чатик]</Footer>\n        </Layout>\n      </Layout>\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { takeLatest, takeLeading, put, call, fork } from 'redux-saga/effects'\r\nimport {\r\n  fetchUserRequest,\r\n  fetchUserSuccess,\r\n  fetchUserFailure,\r\n  logoutUserRequest,\r\n  setUser,\r\n  setToken\r\n} from './actions'\r\nimport authService from '../../services/auth'\r\n\r\n/** Сохранение token в localStorage */\r\nexport function* setTokenFlow({ payload }) {\r\n  yield call([authService, authService.setToken], payload)\r\n}\r\nfunction* setTokenWatcher() {\r\n  yield takeLatest(setToken, setTokenFlow)\r\n}\r\n\r\n/** Выход пользователя из системы (logout) */\r\nexport function* logoutUserRequestFlow() {\r\n  yield call([authService, authService.removeToken])\r\n  yield put(setUser(false))\r\n}\r\nfunction* userLogoutWatcher() {\r\n  yield takeLatest(logoutUserRequest, logoutUserRequestFlow)\r\n}\r\n\r\n/** Получение объекта пользователя по токену */\r\nexport function* fetchUserByTokenFlow() {\r\n  try {\r\n    const token = yield call([authService, authService.getToken])\r\n    if (!token) {\r\n      yield put(fetchUserFailure())\r\n      return\r\n    }\r\n    const user = yield call([authService, authService.fetchByToken], { token })\r\n    if (user.data) {\r\n      yield put(fetchUserSuccess(user.data))\r\n    }\r\n  } catch (error) {\r\n    yield put(fetchUserFailure(error))\r\n  }\r\n}\r\nfunction* fetchUserByTokenWatcher() {\r\n  yield takeLeading(fetchUserRequest, fetchUserByTokenFlow)\r\n}\r\n\r\nexport default function* generator() {\r\n  yield fork(setTokenWatcher)\r\n  yield fork(fetchUserByTokenWatcher)\r\n  yield fork(userLogoutWatcher)\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { handleActions } from 'redux-actions'\r\nimport { UserDTO } from '../../services/auth'\r\nimport {\r\n  setUser,\r\n  fetchUserRequest,\r\n  fetchUserSuccess,\r\n  fetchUserFailure\r\n} from './actions'\r\n\r\nexport interface AuthState {\r\n  user: UserDTO\r\n}\r\n\r\nconst user = handleActions(\r\n  {\r\n    [fetchUserRequest]: () => null,\r\n    [fetchUserSuccess]: (_state, action) => action.payload,\r\n    [fetchUserFailure]: () => false,\r\n    [setUser]: (_state, action) => action.payload\r\n  },\r\n  null\r\n)\r\n\r\nexport default combineReducers<AuthState>({\r\n  user\r\n})\r\n","import { combineReducers } from 'redux'\nimport { fork } from 'redux-saga/effects'\nimport authSagas from './Auth/sagas'\nimport auth, { AuthState } from './Auth/reducer'\n\nexport interface RootState {\n  auth: AuthState\n}\n\nexport default combineReducers({ auth })\n\nexport function* rootSaga() {\n  yield fork(authSagas)\n}\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer, { rootSaga } from './modules'\nimport { AUTH_USER_FETCH_REQUEST } from './modules/Auth/actions'\n\nconst createAppStore = () => {\n  const sagaMiddleware = createSagaMiddleware()\n\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(sagaMiddleware),\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  store.dispatch({ type: AUTH_USER_FETCH_REQUEST })\n\n  return store\n}\n\nexport default createAppStore\n","import { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport './index.scss'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport createStore from './store'\n\nconst store = createStore()\n\nrender(\n  <StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}