{"version":3,"sources":["images/svelte.png","components/Home/index.tsx","components/MainMenu/index.tsx","components/Chat/index.tsx","components/Login/index.tsx","components/Register/index.tsx","components/Recover/index.tsx","components/ChangePassword/index.tsx","components/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","src","svelte","width","alt","menuItems","key","label","path","icon","PieChartOutlined","MainMenu","useState","selectedKey","setSelectedKey","location","useLocation","history","useHistory","findSelectedKey","useCallback","selectedItem","find","item","pathname","useEffect","style","float","mode","selectedKeys","onClick","clicked","_item","push","map","Item","Chat","Login","className","title","name","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","rules","required","min","message","prefix","UserOutlined","placeholder","size","LockOutlined","type","noStyle","to","htmlType","block","Register","margin","MailOutlined","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Recover","ChangePassword","Header","Layout","Content","Footer","Sider","App","collapsed","setCollapsed","minHeight","theme","collapsible","onCollapse","isCollapsed","DesktopOutlined","padding","exact","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8090dab3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/svelte.88cbbc75.png\";","import { FC } from 'react'\nimport svelte from '../../images/svelte.png'\n\nconst Home: FC = () => <img src={svelte} width={500} alt=\"Коротко о Svelte\" />\n\nexport default Home\n","import React, { FC, useState, useEffect, useCallback } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { PieChartOutlined } from '@ant-design/icons'\nimport { Menu } from 'antd'\n\nconst menuItems = [\n  { key: '1', label: 'Главная', path: '/', icon: <PieChartOutlined /> },\n  { key: '2', label: 'Войти', path: '/auth/login', icon: <PieChartOutlined /> },\n  {\n    key: '3',\n    label: 'Регистрация',\n    path: '/auth/register',\n    icon: <PieChartOutlined />\n  }\n]\n\nconst MainMenu: FC = () => {\n  const [selectedKey, setSelectedKey] = useState('')\n  const location = useLocation()\n  const history = useHistory()\n\n  const onClickMenu = (item) => {\n    const clicked = menuItems.find((_item) => _item.key === item.key)\n    history.push(clicked!.path)\n  }\n\n  const findSelectedKey = useCallback(() => {\n    const selectedItem = menuItems.find(\n      (item) => location.pathname === item.path\n    )\n    return selectedItem?.key || ''\n  }, [location.pathname])\n\n  useEffect(() => {\n    setSelectedKey(findSelectedKey())\n  }, [location, findSelectedKey])\n\n  return (\n    <Menu\n      style={{ float: 'right' }}\n      mode=\"horizontal\"\n      selectedKeys={[selectedKey]}\n      onClick={onClickMenu}\n    >\n      {menuItems.map((item) => (\n        <Menu.Item key={item.key} icon={item.icon}>\n          {item.label}\n        </Menu.Item>\n      ))}\n    </Menu>\n  )\n}\n\nexport default MainMenu\n","const Chat = () => <h1>Chat window</h1>\n\nexport default Chat\n","import { Form, Input, Button, Card } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\n\nconst Login = () => {\n  const onFinish = (values: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Success:', values)\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div className=\"card-container\">\n      <Card className=\"card-centered\" title=\"Войти\">\n        <Form\n          name=\"login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                min: 4,\n                message: 'Минимум 4 символа'\n              }\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined />}\n              placeholder=\"Имя пользователя\"\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, min: 6, message: 'Минимум 6 символов' }]}\n          >\n            <Input\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"Пароль\"\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Form.Item name=\"register\" noStyle>\n              <Link to=\"/auth/register\">Регистрация</Link>\n            </Form.Item>\n\n            <Link className=\"link-recover\" to=\"/auth/recover\">\n              Забыли пароль?\n            </Link>\n          </Form.Item>\n\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\n            Войти\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Login\n","import { Form, Input, Button, Card } from 'antd'\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons'\n\nconst Register = () => {\n  const onFinish = (values: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Success:', values)\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div className=\"card-container\">\n      <Card style={{ width: 500, margin: '0 auto' }} title=\"Регистрация\">\n        <Form\n          name=\"register\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Введите имя пользователя (минимум 4 символа)',\n                min: 4\n              }\n            ]}\n          >\n            <Input placeholder=\"Имя\" size=\"large\" prefix={<UserOutlined />} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: 'Введите Ваш Email!' }]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Введите пароль!' }]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm-password\"\n            dependencies={['password']}\n            rules={[\n              { required: true, message: 'Введите подтверждение пароля!' },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('Пароли должны совпадать!'))\n                }\n              })\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль еще раз\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Button\n            className=\"submit-button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            block\n          >\n            Зарегистрироваться\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Register\n","import { FC } from 'react'\nimport { Form, Input, Button, Card } from 'antd'\nimport { MailOutlined } from '@ant-design/icons'\n\nconst Recover: FC = () => {\n  const onFinish = (values: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Success:', values)\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div className=\"card-container\">\n      <Card className=\"card-centered\" title=\"Восстановление пароля\">\n        <p>\n          Укажите email, указанный при регистрации и мы вышлем на него ссылку\n          для восстановления пароля.\n        </p>\n        <Form\n          name=\"recover\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: 'Введите Email!' }]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\n            Восстановить пароль\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Recover\n","import { Form, Input, Button, Card } from 'antd'\nimport { LockOutlined } from '@ant-design/icons'\n\nconst ChangePassword = () => {\n  const onFinish = (values: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Success:', values)\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div className=\"card-container\">\n      <Card style={{ width: 500, margin: '0 auto' }} title=\"Изменение пароля\">\n        <p>Придумайте новый пароль</p>\n        <Form\n          name=\"change-password\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Введите пароль!' }]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm-password\"\n            dependencies={['password']}\n            rules={[\n              { required: true, message: 'Введите подтверждение пароля!' },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('Пароли должны совпадать!'))\n                }\n              })\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль еще раз\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Button\n            className=\"submit-button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            block\n          >\n            Изменить пароль\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { FC, useState } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Layout, Menu } from 'antd'\nimport { DesktopOutlined } from '@ant-design/icons'\n\nimport Home from '../Home'\nimport MainMenu from '../MainMenu'\nimport Chat from '../Chat'\nimport Login from '../Login'\nimport Register from '../Register'\nimport Recover from '../Recover'\nimport ChangePassword from '../ChangePassword'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nconst App: FC = () => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  const onCollapse = (isCollapsed: boolean) => {\n    setCollapsed(isCollapsed)\n  }\n\n  return (\n    <>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider\n          theme=\"light\"\n          collapsible\n          collapsed={collapsed}\n          onCollapse={onCollapse}\n        >\n          <Menu mode=\"inline\">\n            <Menu.Item key=\"1\" icon={<DesktopOutlined />}>\n              Комната 1\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n              Комната 2\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\">\n            <MainMenu />\n          </Header>\n          <Content style={{ margin: '0 16px' }}>\n            <div style={{ padding: 24, minHeight: 360 }}>\n              <Switch>\n                <Route path=\"/\" exact>\n                  <Home />\n                </Route>\n                <Route path=\"/auth/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/auth/register\">\n                  <Register />\n                </Route>\n                <Route path=\"/auth/recover\">\n                  <Recover />\n                </Route>\n                <Route path=\"/auth/change-password\">\n                  <ChangePassword />\n                </Route>\n                <Route path=\"/chat\">\n                  <Chat />\n                </Route>\n                <Route path=\"*\">\n                  <Redirect to=\"/auth/login\" />\n                </Route>\n              </Switch>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2021</Footer>\n        </Layout>\n      </Layout>\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport { render } from 'react-dom'\nimport './index.scss'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nrender(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}