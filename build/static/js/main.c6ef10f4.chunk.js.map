{"version":3,"sources":["images/svelte.png","components/Home/index.tsx","components/MainMenu/index.tsx","components/Chat/index.tsx","services/auth.ts","components/Login/index.tsx","components/Register/index.tsx","components/Recover/index.tsx","components/ChangePassword/index.tsx","components/Activation/index.tsx","components/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","className","src","svelte","style","width","maxWidth","alt","menuItems","key","label","path","icon","PieChartOutlined","MainMenu","useState","selectedKey","setSelectedKey","location","useLocation","history","useHistory","findSelectedKey","useCallback","selectedItem","find","item","pathname","useEffect","float","mode","selectedKeys","onClick","clicked","_item","push","map","Item","Chat","makeError","error","response","statusText","type","message","data","AuthService","create","payload","a","axios","post","activate","code","patch","login","Login","emptyMessage","Form","useForm","form","alert","setAlert","loading","setLoading","onFinish","values","email","password","authService","title","name","initialValues","remember","rules","required","min","prefix","MailOutlined","placeholder","size","Password","LockOutlined","noStyle","to","indicator","LoadingOutlined","fontSize","spin","delay","htmlType","block","Register","resetFields","validateTrigger","pattern","UserOutlined","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Recover","console","log","onFinishFailed","errorInfo","ChangePassword","Activation","useParams","activateUser","Header","Layout","Content","Footer","Sider","App","collapsed","setCollapsed","toggle","event","preventDefault","minHeight","theme","collapsible","trigger","DesktopOutlined","MenuUnfoldOutlined","MenuFoldOutlined","exact","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6ef10f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/svelte.88cbbc75.png\";","import { FC } from 'react'\nimport svelte from '../../images/svelte.png'\n\nconst Home: FC = () => (\n  <div className=\"flex-center flex-column\">\n    <h1>Коротко о Svelte</h1>\n    <img\n      src={svelte}\n      style={{ width: 700, maxWidth: '100%' }}\n      alt=\"Коротко о Svelte\"\n    />\n  </div>\n)\n\nexport default Home\n","import { FC, useState, useEffect, useCallback } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { PieChartOutlined } from '@ant-design/icons'\nimport { Menu } from 'antd'\n\nconst menuItems = [\n  { key: '1', label: 'Главная', path: '/', icon: <PieChartOutlined /> },\n  { key: '2', label: 'Войти', path: '/auth/login', icon: <PieChartOutlined /> },\n  {\n    key: '3',\n    label: 'Регистрация',\n    path: '/auth/register',\n    icon: <PieChartOutlined />\n  }\n]\n\nconst MainMenu: FC = () => {\n  const [selectedKey, setSelectedKey] = useState('')\n  const location = useLocation()\n  const history = useHistory()\n\n  const onClickMenu = (item) => {\n    const clicked = menuItems.find((_item) => _item.key === item.key)\n    history.push(clicked!.path)\n  }\n\n  const findSelectedKey = useCallback(() => {\n    const selectedItem = menuItems.find(\n      (item) => location.pathname === item.path\n    )\n    return selectedItem?.key || ''\n  }, [location.pathname])\n\n  useEffect(() => {\n    setSelectedKey(findSelectedKey())\n  }, [location, findSelectedKey])\n\n  return (\n    <Menu\n      style={{ float: 'right' }}\n      mode=\"horizontal\"\n      selectedKeys={[selectedKey]}\n      onClick={onClickMenu}\n    >\n      {menuItems.map((item) => (\n        <Menu.Item key={item.key} icon={item.icon}>\n          {item.label}\n        </Menu.Item>\n      ))}\n    </Menu>\n  )\n}\n\nexport default MainMenu\n","const Chat = () => <h1>Chat window</h1>\n\nexport default Chat\n","import axios from 'axios'\nimport { ServerResponse } from '../types/server'\n\nexport interface UserLoginRequestDTO {\n  email: string\n  password: string\n}\n\nexport interface UserCreateRequestDTO {\n  name: string\n  email: string\n  password: string\n}\n\nexport interface UserDTO {\n  id: number\n  name: string\n  email: string\n  role: string\n  is_active: boolean\n}\n\nconst SERVER_UNAVAILABLE =\n  'Сервер не отвечает или временно недоступен. Попробуйте повторить запрос позднее.'\n\nconst makeError = (error): ServerResponse => {\n  const { response } = error\n  if (response.statusText === 'Internal Server Error') {\n    return {\n      type: 'error',\n      message: SERVER_UNAVAILABLE\n    }\n  }\n\n  return response.data\n}\n\n// todo Методы абсолютно одинаковы, следует вынести логику в одно место\nconst AuthService = {\n  create: async (payload: UserCreateRequestDTO): Promise<ServerResponse> => {\n    try {\n      const response = await axios.post('/api/v1/user/create', payload)\n      return response.data\n    } catch (error) {\n      return makeError(error)\n    }\n  },\n\n  activate: async (code: string): Promise<ServerResponse> => {\n    try {\n      const response = await axios.patch(`/api/v1/user/activate/${code}`)\n      return response.data\n    } catch (error) {\n      return makeError(error)\n    }\n  },\n\n  login: async (payload: UserLoginRequestDTO): Promise<ServerResponse> => {\n    try {\n      const response = await axios.post('/api/v1/user/login', payload)\n      return response.data\n    } catch (error) {\n      return makeError(error)\n    }\n  }\n}\n\nexport default AuthService\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport { MailOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport authService from '../../services/auth'\n\ninterface FormValues {\n  email: string\n  password: string\n}\n\nconst Login: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values: FormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { email, password } = values\n      const { type, message } = await authService.login({\n        email,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      // todo form.resetFields() ?\n      setLoading(false)\n\n      // todo Выполнен логин, редирект куда-то ?\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Войти\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Form\n          form={form}\n          name=\"login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: 'email',\n                min: 4,\n                message: 'Некорректный email'\n              }\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, min: 6, message: 'Минимум 6 символов' }]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Form.Item name=\"register\" noStyle>\n              <Link to=\"/auth/register\">Регистрация</Link>\n            </Form.Item>\n\n            <Link className=\"link-recover\" to=\"/auth/recover\">\n              Забыли пароль?\n            </Link>\n          </Form.Item>\n\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\n            Войти\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Login\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailOutlined,\n  LoadingOutlined\n} from '@ant-design/icons'\nimport authService from '../../services/auth'\n\ninterface FormValues {\n  name: string\n  email: string\n  password: string\n}\n\nconst Register: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values: FormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { name, email, password } = values\n      const { type, message } = await authService.create({\n        name,\n        email,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      form.resetFields()\n      setLoading(false)\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Регистрация\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Form\n          form={form}\n          name=\"register\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          validateTrigger=\"onBlur\"\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message:\n                  \"Имя должно содержать минимум 4 символа английского или русского алфавита, допустимы цифры и знаки '- _'\",\n                pattern: /^[a-zA-Zа-яА-ЯёЁ0-9-_\\s]{4,}$/\n              }\n            ]}\n          >\n            <Input placeholder=\"Имя\" size=\"large\" prefix={<UserOutlined />} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[\n              { required: true, type: 'email', message: 'Некорректный email' }\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Введите пароль! Минимум 6 символов.',\n                min: 6\n              }\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm-password\"\n            dependencies={['password']}\n            rules={[\n              {\n                required: true,\n                message: 'Введите подтверждение пароля! Минимум 6 символов.',\n                min: 6\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('Пароли должны совпадать!'))\n                }\n              })\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль еще раз\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n\n          <Button\n            className=\"submit-button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            block\n          >\n            Зарегистрироваться\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Register\n","import { FC } from 'react'\nimport { Form, Input, Button, Card } from 'antd'\nimport { MailOutlined } from '@ant-design/icons'\n\nconst Recover: FC = () => {\n  const onFinish = (values: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Success:', values)\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Восстановление пароля\">\n        <p>\n          Укажите email, указанный при регистрации и мы вышлем на него ссылку\n          для восстановления пароля.\n        </p>\n        <Form\n          name=\"recover\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          validateTrigger=\"onBlur\"\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[\n              { required: true, type: 'email', message: 'Некорректный email!' }\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\n            Восстановить пароль\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default Recover\n","import { Form, Input, Button, Card } from 'antd'\nimport { LockOutlined } from '@ant-design/icons'\n\nconst ChangePassword = () => {\n  const onFinish = (values: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Success:', values)\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    // eslint-disable-next-line no-console\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Изменение пароля\">\n        <p>Придумайте новый пароль</p>\n        <Form\n          name=\"change-password\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: 'Введите пароль!' }]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm-password\"\n            dependencies={['password']}\n            rules={[\n              { required: true, message: 'Введите подтверждение пароля!' },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('Пароли должны совпадать!'))\n                }\n              })\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль еще раз\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Button\n            className=\"submit-button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            block\n          >\n            Изменить пароль\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import { FC, useState, useEffect } from 'react'\nimport { Card, Alert } from 'antd'\nimport { Link, useParams } from 'react-router-dom'\nimport authService from '../../services/auth'\n\ninterface ActivationParams {\n  code?: string\n}\n\nconst Activation: FC = () => {\n  const { code }: ActivationParams = useParams()\n  const emptyMessage = { type: '', message: '' }\n  const [alert, setAlert] = useState(emptyMessage)\n\n  useEffect(() => {\n    const activateUser = async () => {\n      const { type, message } = await authService.activate(code)\n      if (message) {\n        setAlert({ type, message })\n      }\n    }\n    activateUser()\n  }, [code])\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Активация нового пользователя\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Link className=\"login-link\" to=\"/auth/login\">\n          Вход\n        </Link>\n        <Link className=\"link-recover\" to=\"/auth/recover\">\n          Восстановить пароль\n        </Link>\n      </Card>\n    </div>\n  )\n}\n\nexport default Activation\n","import { FC, SyntheticEvent, useState } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Layout, Menu } from 'antd'\nimport {\n  DesktopOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined\n} from '@ant-design/icons'\n\nimport Home from '../Home'\nimport MainMenu from '../MainMenu'\nimport Chat from '../Chat'\nimport Login from '../Login'\nimport Register from '../Register'\nimport Recover from '../Recover'\nimport ChangePassword from '../ChangePassword'\nimport Activation from '../Activation'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nconst App: FC = () => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  const toggle = (event: SyntheticEvent): void => {\n    event.preventDefault()\n    setCollapsed(!collapsed)\n  }\n\n  return (\n    <>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider theme=\"light\" collapsible trigger={null} collapsed={collapsed}>\n          <Menu mode=\"inline\">\n            <Menu.Item key=\"1\" icon={<DesktopOutlined />}>\n              Комната 1\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n              Комната 2\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"header site-layout-background\">\n            {collapsed ? (\n              <MenuUnfoldOutlined className=\"trigger\" onClick={toggle} />\n            ) : (\n              <MenuFoldOutlined className=\"trigger\" onClick={toggle} />\n            )}\n            <MainMenu />\n          </Header>\n          <Content className=\"content\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <Home />\n              </Route>\n              <Route path=\"/auth/login\">\n                <Login />\n              </Route>\n              <Route path=\"/auth/register\">\n                <Register />\n              </Route>\n              <Route path=\"/auth/activation/:code\">\n                <Activation />\n              </Route>\n              <Route path=\"/auth/recover\">\n                <Recover />\n              </Route>\n              <Route path=\"/auth/change-password\">\n                <ChangePassword />\n              </Route>\n              <Route path=\"/chat\">\n                <Chat />\n              </Route>\n              <Route path=\"*\">\n                <Redirect to=\"/auth/login\" />\n              </Route>\n            </Switch>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>© [Пишем чатик]</Footer>\n        </Layout>\n      </Layout>\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport './index.scss'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nrender(\n  <StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}