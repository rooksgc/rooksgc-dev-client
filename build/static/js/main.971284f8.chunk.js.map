{"version":3,"sources":["hooks/useShallowEqualSelector.ts","containers/Private.tsx","modules/Chat/actions.ts","hooks/useActions.ts","services/api.ts","services/chat.ts","services/socket.ts","components/MainMenu/index.tsx","modules/Modals/actions.ts","modules/Auth/actions.ts","containers/ModalWindow.tsx","services/user.ts","components/PhotoUploader/index.tsx","components/Modals/UserProfile/index.tsx","components/UserMenu/index.tsx","components/App/Header/index.tsx","containers/Scrollbar.tsx","components/Modals/CreateChannel/index.tsx","components/Modals/AddContact/index.tsx","components/App/Sidebar/SidebarMenu/index.tsx","components/App/Sidebar/index.tsx","hooks/useEscape.ts","containers/PrivateRoute.tsx","services/auth.ts","components/Auth/Login/index.tsx","components/Auth/ChangePassword/index.tsx","components/Auth/Activation/index.tsx","components/Auth/Register/index.tsx","components/Auth/Recover/index.tsx","components/Chat/Messages/index.tsx","components/Chat/InputMessage/index.tsx","components/Chat/index.tsx","components/Routes/index.tsx","components/App/index.tsx","modules/Auth/sagas.ts","modules/Auth/reducer.ts","modules/Chat/reducer.ts","modules/Modals/reducer.ts","modules/launchSaga.ts","modules/index.ts","modules/store.ts","reportWebVitals.ts","index.tsx"],"names":["useShallowEqualSelector","selector","useSelector","shallowEqual","PrivateContainer","children","state","auth","user","addChannel","createAction","setActiveChannel","initChannelsData","addContact","initContactsData","sendChannelMessage","sendContactMessage","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","map","a","bindActionCreators","AUTH_TOKEN_STORAGE_KEY","makeError","error","response","data","status","message","type","apiService","getToken","localStorage","getItem","send","method","endpoint","payload","axios","interceptors","request","use","config","token","headers","Authorization","chatService","createChannel","api","getSubscriptions","channelsData","contactsData","userChannelsList","channels","populatedChannels","userContactsList","contacts","populatedContacts","reduce","acc","id","ownerId","name","members","photo","messages","console","log","WS","socket","undefined","connect","io","autoConnect","userId","subscribeToChannels","emit","subscribeToChannel","channelId","inviteToChannel","disconnect","menuItems","key","label","path","icon","PieChartOutlined","MainMenu","location","useLocation","history","useHistory","find","item","pathname","mode","selectedKeys","onClick","clicked","_item","push","Item","changeCreateChannelModalState","changeUserProfileModalState","changeAddContactModalState","userLoginRequest","userLogoutRequest","userFetchSuccess","userFetchFailure","userUpdatePhoto","ModalWindow","props","title","visible","onOk","onCancel","afterClose","destroyOnClose","footer","style","centered","userService","changePhoto","beforeUpload","file","isJpgOrPng","isLt2M","size","getBase64","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","event","img","Image","target","result","el","elem","document","createElement","scaleFactor","width","height","ctx","getContext","drawImage","srcEncoded","canvas","toDataURL","onPreview","image","window","open","write","outerHTML","PhotoUploader","preloadedPhoto","onChangePhoto","onRemovePhoto","initialPhoto","useState","fileList","setFileList","onChange","newFileList","imageUrl","className","rotate","shape","modalTitle","modalOk","modalCancel","listType","customRequest","options","onSuccess","length","UserProfile","loading","setLoading","setPhoto","email","userProfile","modals","dispatchUserUpdatePhoto","dispatchChangeUserProfileModalState","onSaveChanges","indicator","LoadingOutlined","fontSize","spin","delay","disabled","UserMenu","dispatchUserLogoutRequest","menu","ProfileOutlined","Divider","LogoutOutlined","overlay","trigger","UserOutlined","Text","Typography","AntHeader","Layout","Header","activeChannel","chat","onSidebarToggle","sidebarCollapsed","onTriggerClick","menuTrigger","MenuUnfoldOutlined","padding","MenuFoldOutlined","activeChannelLabel","renderTrackVertical","ownProps","backgroundColor","right","bottom","top","borderRadius","renderThumbVertical","boxShadow","Scrollbar","hideTracksWhenNotNeeded","autoHide","autoHideTimeout","CreateChannel","Form","useForm","form","dispatchActiveChannel","dispatchAddChannel","dispatchChangeCreateChannelModalState","onFinish","values","description","serverMessage","success","activeChannelPayload","layout","rules","required","max","placeholder","htmlType","AddContact","addContactModalState","dispatchChangeAddContactModalState","dispatchAddContact","from","min","prefix","MailOutlined","SidebarMenu","UsergroupAddOutlined","UserAddOutlined","ContactsOutlined","SettingOutlined","MenuOutlined","Sider","Sidebar","onEscape","sidebarLocked","setSidebarLocked","useEffect","handleEsc","addEventListener","removeEventListener","onClickMenu","split","channelType","intChannelId","parseInt","selectedMenuKey","collapsed","collapsedWidth","theme","overflow","LockOutlined","UnlockOutlined","PlusCircleOutlined","Object","keys","entries","channel","MessageFilled","color","contactId","contact","PrivateRoute","Component","component","rest","render","routeProps","to","defaultProps","authService","register","activate","code","login","fetchByToken","recover","checkSecret","changePassword","setToken","setItem","removeToken","removeItem","Login","emptyMessage","alert","setAlert","dispatchUserLoginRequest","password","initialValues","remember","Password","noStyle","block","ChangePassword","useParams","secretError","setSecretError","changeSuccess","setChangeSuccess","secretType","match","dependencies","getFieldValue","validator","_","value","reject","Error","Activation","activateUser","Register","resetFields","validateTrigger","pattern","Recover","Messages","text","InputMessage","memo","sendMessage","autoFocus","SendOutlined","Chat","dispatchSendChannelMessage","dispatchSendContactMessage","onSendMessage","useCallback","nanoid","activeChannelId","channelData","Routes","exact","Content","App","needRecreateRef","setNeedRecreateRef","setSidebarCollapsed","SR","useRef","isCollapsed","current","on","reason","off","userLoginRequestFlow","userLoginWatcher","userLogoutRequestFlow","userLogoutWatcher","put","call","takeLatest","authSagas","generator","fork","handleActions","_state","action","authReducer","combineReducers","addMessage","chatReducer","modalsReducer","launchSaga","rootSaga","rootReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","sagaMiddleware","createSagaMiddleware","createStore","compose","composeWithDevTools","applyMiddleware","run","createAppStore","getElementById"],"mappings":"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","file":"static/js/main.971284f8.chunk.js","sourcesContent":["import { useSelector, shallowEqual } from 'react-redux'\nimport { IRootState } from 'modules'\n\nconst useShallowEqualSelector = (selector: any) =>\n  useSelector<IRootState>(selector, shallowEqual)\n\nexport { useShallowEqualSelector }\n","import { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\n\nconst PrivateContainer = ({ children }) => {\n  const user = useShallowEqualSelector((state) => state.auth.user)\n  if (!user) return null\n\n  return children\n}\n\nexport { PrivateContainer }\n","import { createAction } from 'redux-actions'\r\n\r\n/** Добавление нового канала */\r\nexport const addChannel: any = createAction('CHAT/ADD_CHANNEL')\r\n/** Установить активный канал чата (id, label) */\r\nexport const setActiveChannel: any = createAction('CHAT/SET_ACTIVE_CHANNEL')\r\n/** Начальное состояние каналов на момент захода пользователя */\r\nexport const initChannelsData: any = createAction('CHAT/INIT_CHANNELS_DATA')\r\n\r\n/** Добавление нового контакта */\r\nexport const addContact: any = createAction('CHAT/ADD_CONTACT')\r\n/** Начальное состояние контактов на момент захода пользователя */\r\nexport const initContactsData: any = createAction('CHAT/INIT_CONTACTS_DATA')\r\n/** Отправить сообщение в чат канала */\r\nexport const sendChannelMessage: any = createAction('CHAT/SEND_CHANNEL_MESSAGE')\r\n/** Отправить приватное сообщение пользователю */\r\nexport const sendContactMessage: any = createAction('CHAT/SEND_CONTACT_MESSAGE')\r\n","import { bindActionCreators } from 'redux'\nimport { useDispatch } from 'react-redux'\nimport { useMemo } from 'react'\n\nconst useActions = (actions, deps) => {\n  const dispatch = useDispatch()\n\n  return useMemo(\n    () => {\n      if (Array.isArray(actions)) {\n        return actions.map((a) => bindActionCreators(a, dispatch))\n      }\n      return bindActionCreators(actions, dispatch)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps ? [dispatch, ...deps] : [dispatch]\n  )\n}\n\nexport { useActions }\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios'\n\nexport interface IServerResponse {\n  type: any\n  message?: string\n  data?: any\n  errors?: string[]\n  token?: string\n}\n\n/** Сообщение при недоступном соединении */\nexport const SERVER_UNAVAILABLE =\n  'Сервер не отвечает или временно недоступен. Попробуйте повторить запрос позднее.'\n\n/** Ключ, по которому в localStorage хранится токен */\nexport const AUTH_TOKEN_STORAGE_KEY = 'auth'\n\n/** Отказ в предоставлении ресурса из-за неверного токена */\nexport const AUTH_REJECTION_MESSAGE =\n  'Войдите или зарегистрируйтесь для просмотра данного содержимого.'\n\nexport const makeError = (error: any): IServerResponse => {\n  const {\n    response: { data, status }\n  } = error\n\n  if (typeof data === 'string' && (status === 502 || status === 500)) {\n    return {\n      type: 'error',\n      message: SERVER_UNAVAILABLE\n    }\n  }\n\n  if (data?.message === 'No authorization token was found') {\n    return {\n      type: 'error',\n      message: AUTH_REJECTION_MESSAGE\n    }\n  }\n\n  return data\n}\n\nconst apiService = {\n  getToken: (): string | null => localStorage.getItem(AUTH_TOKEN_STORAGE_KEY),\n\n  send: async ({\n    method,\n    endpoint,\n    payload = {}\n  }): Promise<IServerResponse> => {\n    try {\n      const response: AxiosResponse = await axios[method](endpoint, payload)\n      return response.data\n    } catch (error) {\n      return makeError(error)\n    }\n  }\n}\n\naxios.interceptors.request.use(\n  (config: AxiosRequestConfig) => {\n    const token = apiService.getToken()\n\n    if (token) {\n      // eslint-disable-next-line no-param-reassign\n      config.headers = {\n        Authorization: `Bearer ${token}`\n      }\n    }\n\n    return config\n  },\n  (error) => makeError(error)\n)\n\nexport { apiService }\n","import { apiService as api, IServerResponse } from './api'\n\ninterface ICreateChannelData {\n  name: string\n  description?: string\n  photo?: string\n  ownerId: number\n}\n\nconst chatService = {\n  /** Создать канал */\n  createChannel: async (\n    payload: ICreateChannelData\n  ): Promise<IServerResponse> =>\n    api.send({\n      method: 'put',\n      endpoint: '/api/v1/chat/channel',\n      payload\n    }),\n\n  /** Получить список каналов и контакток для пользователя\n   *  и отформатировать для фронтенда\n   */\n  getSubscriptions: async ({ channelsData, contactsData }): Promise<any> => {\n    try {\n      let userChannelsList\n      if (!channelsData) {\n        userChannelsList = []\n      } else {\n        const populatedChannels = await api.send({\n          method: 'post',\n          endpoint: `/api/v1/chat/channels`,\n          payload: { channels: channelsData }\n        })\n\n        userChannelsList = populatedChannels.data\n      }\n\n      let userContactsList\n      if (!contactsData) {\n        userContactsList = []\n      } else {\n        const populatedContacts = await api.send({\n          method: 'post',\n          endpoint: `/api/v1/user/contacts`,\n          payload: { contacts: contactsData }\n        })\n\n        userContactsList = populatedContacts.data\n      }\n\n      const channels = userChannelsList.reduce(\n        (acc, { id, ownerId, name, members, photo }) => ({\n          ...acc,\n          [id]: {\n            ownerId,\n            name,\n            members,\n            type: 'channel',\n            photo,\n            messages: []\n          }\n        }),\n        {}\n      )\n\n      const contacts = userContactsList.reduce(\n        (acc, { id, name, photo }) => ({\n          ...acc,\n          [id]: {\n            name,\n            photo,\n            type: 'contact',\n            messages: []\n          }\n        }),\n        {}\n      )\n\n      const data = { channels, contacts }\n      return { userChannelsList, data }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error)\n    }\n\n    return null\n  }\n}\n\nexport { chatService }\n","import { io } from 'socket.io-client'\nimport { chatService } from 'services/chat'\nimport { UserDTO } from './user'\n\nconst WS = {\n  socket: undefined,\n  connect: async (user: UserDTO) => {\n    if (!WS.socket) {\n      WS.socket = io('/chat', { autoConnect: false })\n      WS.socket.auth = { userId: user.id }\n      WS.socket.connect()\n    }\n\n    return WS.subscribeToChannels(user)\n  },\n  subscribeToChannels: async (user: UserDTO) => {\n    const { userChannelsList, data } = await chatService.getSubscriptions({\n      channelsData: user.channels,\n      contactsData: user.contacts\n    })\n    WS.socket.emit('channels:subscribe', { userChannelsList })\n    return data\n  },\n  subscribeToChannel: async (channelId: number) => {\n    WS.socket.emit('channel:subscribe', channelId)\n  },\n  inviteToChannel: async (userId: number, channelId: number) => {\n    WS.socket.emit('channel:invite', { userId, channelId })\n  },\n  sendChannelMessage: (payload) => {\n    WS.socket.emit('channel:message:send', payload)\n  },\n  sendContactMessage: (payload) => {\n    WS.socket.emit('contact:message:send', payload)\n  },\n  disconnect: () => {\n    WS.socket.disconnect()\n    WS.socket = undefined\n  }\n}\n\nexport { WS }\n","import { FC } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { Menu } from 'antd'\nimport { PieChartOutlined } from '@ant-design/icons'\n\nconst menuItems = [\n  {\n    key: 'login',\n    label: 'Войти',\n    path: '/auth/login',\n    icon: <PieChartOutlined />\n  },\n  {\n    key: 'register',\n    label: 'Регистрация',\n    path: '/auth/register',\n    icon: <PieChartOutlined />\n  }\n]\n\nconst MainMenu: FC = () => {\n  const location = useLocation()\n  const history = useHistory()\n\n  const key = menuItems.find((item) => location.pathname === item.path)?.key\n  if (!key) return null\n\n  const onClickMenu = (item) => {\n    if (item.key === key) return\n    const clicked = menuItems.find((_item) => _item.key === item.key)\n    history.push(clicked.path)\n  }\n\n  return (\n    <Menu mode=\"horizontal\" selectedKeys={[key]} onClick={onClickMenu}>\n      {menuItems.map((item) => (\n        <Menu.Item key={item.key} icon={item.icon}>\n          {item.label}\n        </Menu.Item>\n      ))}\n    </Menu>\n  )\n}\n\nexport { MainMenu }\n","import { createAction } from 'redux-actions'\n\n/** Модальное окно создания канала */\nexport const changeCreateChannelModalState: any = createAction(\n  'MODALS/CHANGE_CREATE_CHANNEL_MODAL_STATE'\n)\n/** Модальное окно профиля пользователя */\nexport const changeUserProfileModalState: any = createAction(\n  'MODALS/CHANGE_USER_PROFILE_MODAL_STATE'\n)\n/** Модальное окно добавления контакта */\nexport const changeAddContactModalState: any = createAction(\n  'MODALS/CHANGE_ADD_CONTACT_MODAL_STATE'\n)\n","import { createAction } from 'redux-actions'\r\n\r\n/** Записать токен пользователя в стор */\r\nexport const userLoginRequest: any = createAction('AUTH/USER_LOGIN_REQUEST')\r\n\r\n/** Выход пользователя из системы (logout) */\r\nexport const userLogoutRequest: any = createAction('AUTH/USER_LOGOUT_REQUEST')\r\n\r\n/** Записать объект пользователя в стор */\r\nexport const userFetchSuccess: any = createAction('AUTH/USER_FETCH_SUCCESS')\r\n\r\n/** Ошибка получения объекта пользователя */\r\nexport const userFetchFailure: any = createAction('AUTH/USER_FETCH_FAILURE')\r\n\r\n/** Обновление объекта пользователя (фото) */\r\nexport const userUpdatePhoto: any = createAction('AUTH/USER_UPDATE_PHOTO')\r\n","import { FC, Component, ReactElement } from 'react'\nimport { Modal } from 'antd'\n\ninterface IModalWindowProps {\n  title?: string\n  visible?: boolean\n  centered?: boolean\n  onOk?: () => any | null\n  onCancel?: () => any | null\n  afterClose?: () => any | null\n  destroyOnClose?: boolean\n  footer?: Component[] | FC[] | ReactElement[] | null\n  style?: object | null\n}\n\nconst ModalWindow: FC<IModalWindowProps> = (props) => {\n  const {\n    children,\n    title = '',\n    visible = false,\n    onOk = null,\n    onCancel = null,\n    afterClose = null,\n    destroyOnClose = true,\n    footer = null,\n    style = null\n  } = props\n\n  return (\n    <Modal\n      centered\n      title={title}\n      visible={visible}\n      onOk={onOk}\n      onCancel={onCancel}\n      afterClose={afterClose}\n      destroyOnClose={destroyOnClose}\n      footer={footer}\n      style={style}\n    >\n      {children}\n    </Modal>\n  )\n}\n\nexport { ModalWindow }\n","import { apiService as api, IServerResponse } from './api'\n\nexport interface UserDTO {\n  id: number\n  name: string\n  email: string\n  photo: string\n  role: string\n  channels: string\n  contacts: string\n}\n\nexport interface ChangePhotoRequestDTO {\n  id: number // userId\n  photo: string\n}\n\nexport interface IAddContactRequestDTO {\n  from: number // user.id who adding contact\n  email: string\n}\n\nconst userService = {\n  changePhoto: async (\n    payload: ChangePhotoRequestDTO\n  ): Promise<IServerResponse> =>\n    api.send({\n      method: 'patch',\n      endpoint: '/api/v1/user/photo',\n      payload\n    }),\n\n  addContact: async (\n    payload: IAddContactRequestDTO\n  ): Promise<IServerResponse> =>\n    api.send({\n      method: 'patch',\n      endpoint: '/api/v1/user/contacts',\n      payload\n    })\n}\n\nexport { userService }\n","import { FC, useState } from 'react'\nimport { message, Upload } from 'antd'\nimport ImgCrop from 'antd-img-crop'\n\ninterface IPhotoUploaderProps {\n  /** base64 photo url */\n  preloadedPhoto?: string | null\n  onChangePhoto?: (imageUrl: string) => void\n  onRemovePhoto?: () => void\n}\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n  if (!isJpgOrPng) {\n    message.error('Допустимые форматы файлов: JPG или PNG!')\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2\n  if (!isLt2M) {\n    message.error('Размер изображения не должен превышать 2Мб!')\n  }\n  return isJpgOrPng && isLt2M\n}\n\nconst getBase64 = async (file): Promise<string> => {\n  let src = file.url\n  const resizeWidth = 300\n\n  if (!src) {\n    src = await new Promise((resolve) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file.originFileObj)\n      reader.onload = (event) => {\n        const img = new Image()\n        img.src = event.target.result as string\n        img.onload = (el: any) => {\n          const elem = document.createElement('canvas')\n          const scaleFactor = resizeWidth / el.target.width\n          elem.width = resizeWidth\n          elem.height = el.target.height * scaleFactor\n          const ctx = elem.getContext('2d')\n          ctx.drawImage(el.target, 0, 0, elem.width, elem.height)\n          const srcEncoded = ctx.canvas.toDataURL('image/jpeg', 0.3)\n          resolve(srcEncoded)\n        }\n      }\n    })\n  }\n  return src\n}\n\nconst onPreview = async (file) => {\n  const src = await getBase64(file)\n  const image = new Image()\n  image.src = src\n  const imgWindow = window.open(src)\n  imgWindow.document.write(image.outerHTML)\n}\n\nconst PhotoUploader: FC<IPhotoUploaderProps> = (props) => {\n  const { preloadedPhoto, onChangePhoto, onRemovePhoto } = props\n  const initialPhoto = preloadedPhoto ? [{ url: preloadedPhoto }] : []\n  const [fileList, setFileList] = useState(initialPhoto)\n\n  const customRequest = (options) => {\n    const { onSuccess, file } = options\n    onSuccess(null, file)\n  }\n\n  const onChange = async ({ fileList: newFileList }) => {\n    const file = newFileList[0]\n    if (file?.status === 'done') {\n      const imageUrl = await getBase64(file)\n      onChangePhoto(imageUrl)\n    }\n\n    if (!file) {\n      onRemovePhoto()\n    }\n\n    setFileList(newFileList)\n  }\n\n  return (\n    <div className=\"photo-uploader\">\n      <ImgCrop\n        rotate\n        shape=\"round\"\n        modalTitle=\"Редактировать изображение\"\n        modalOk=\"Применить\"\n        modalCancel=\"Отмена\"\n      >\n        <Upload\n          listType=\"picture-card\"\n          fileList={fileList as any}\n          onChange={onChange}\n          beforeUpload={beforeUpload}\n          onPreview={onPreview}\n          customRequest={customRequest}\n        >\n          {!fileList.length && 'Выбрать фото'}\n        </Upload>\n      </ImgCrop>\n    </div>\n  )\n}\n\nexport { PhotoUploader }\n","import { FC, useState } from 'react'\nimport { Button, Spin, message } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { ModalWindow } from 'containers/ModalWindow'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\nimport { userService, UserDTO } from 'services/user'\nimport { PhotoUploader } from 'components/PhotoUploader'\nimport { useActions } from 'hooks/useActions'\nimport { changeUserProfileModalState } from 'modules/Modals/actions'\nimport { userUpdatePhoto } from 'modules/Auth/actions'\n\ninterface IUserProfileProps {}\n\nconst UserProfile: FC<IUserProfileProps> = () => {\n  const [loading, setLoading] = useState(false)\n  const [photo, setPhoto] = useState('')\n  const { id, name, email, photo: preloadedPhoto } = useShallowEqualSelector(\n    (state) => state.auth.user\n  ) as UserDTO\n  const { userProfile } = useShallowEqualSelector(\n    (state) => state.modals\n  ) as any\n\n  const [\n    dispatchUserUpdatePhoto,\n    dispatchChangeUserProfileModalState\n  ] = useActions([userUpdatePhoto, changeUserProfileModalState], null)\n\n  const onSaveChanges = async () => {\n    if (photo === '') {\n      dispatchChangeUserProfileModalState(false)\n      return\n    }\n\n    try {\n      setLoading(true)\n\n      const { type, message: serverMessage } = await userService.changePhoto({\n        id,\n        photo\n      })\n\n      if (serverMessage) {\n        if (type === 'error') {\n          setLoading(false)\n          return\n        }\n      }\n\n      setLoading(false)\n      dispatchUserUpdatePhoto(photo)\n      dispatchChangeUserProfileModalState(false)\n    } catch (error) {\n      setLoading(false)\n      message.error(error.message)\n    }\n  }\n\n  return (\n    <ModalWindow\n      title=\"Профиль\"\n      visible={userProfile}\n      onCancel={() => dispatchChangeUserProfileModalState(false)}\n      onOk={() => dispatchChangeUserProfileModalState(false)}\n    >\n      <PhotoUploader\n        preloadedPhoto={preloadedPhoto}\n        onChangePhoto={(imageUrl) => setPhoto(imageUrl)}\n        onRemovePhoto={() => setPhoto(null)}\n      />\n      <p>Имя: {name}</p>\n      <p>Email: {email}</p>\n\n      <div className=\"form-footer\">\n        {loading && (\n          <Spin\n            className=\"center\"\n            indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n            delay={500}\n          />\n        )}\n        <Button\n          key=\"back\"\n          onClick={() => dispatchChangeUserProfileModalState(false)}\n          disabled={loading}\n        >\n          Отмена\n        </Button>\n        <Button type=\"primary\" disabled={loading} onClick={onSaveChanges}>\n          Сохранить\n        </Button>\n      </div>\n    </ModalWindow>\n  )\n}\n\nexport { UserProfile }\n","import { FC } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Menu, Dropdown, Avatar } from 'antd'\nimport {\n  UserOutlined,\n  LogoutOutlined,\n  ProfileOutlined\n} from '@ant-design/icons'\nimport { useActions } from 'hooks/useActions'\nimport { changeUserProfileModalState } from 'modules/Modals/actions'\n\nimport { userLogoutRequest } from 'modules/Auth/actions'\nimport { UserDTO } from 'services/user'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\nimport { UserProfile } from 'components/Modals/UserProfile'\n\nconst UserMenu: FC = () => {\n  const history = useHistory()\n\n  const { photo } = useShallowEqualSelector(\n    (state) => state.auth.user\n  ) as UserDTO\n\n  const [\n    dispatchUserLogoutRequest,\n    dispatchChangeUserProfileModalState\n  ] = useActions([userLogoutRequest, changeUserProfileModalState], null)\n\n  const handleMenuClick = (event) => {\n    const { key } = event\n\n    switch (key) {\n      case 'profile':\n        dispatchChangeUserProfileModalState(true)\n        break\n      case 'logout':\n        dispatchUserLogoutRequest()\n        history.push('/auth/login')\n        break\n      default:\n        break\n    }\n  }\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"profile\" icon={<ProfileOutlined />}>\n        Профиль\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n        Выход\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <Avatar\n          size={40}\n          className=\"user-profile\"\n          src={photo && photo}\n          icon={<UserOutlined />}\n        />\n      </Dropdown>\n      <UserProfile />\n    </>\n  )\n}\n\nexport { UserMenu }\n","import { FC } from 'react'\nimport { Layout, Typography } from 'antd'\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\nimport { MainMenu } from 'components/MainMenu'\nimport { UserMenu } from 'components/UserMenu'\nimport { PrivateContainer } from 'containers/Private'\nimport { UserDTO } from 'services/user'\n\nconst { Text } = Typography\n\ninterface IHeaderProps {\n  sidebarCollapsed: boolean\n  onSidebarToggle: (isCollapsed: boolean) => void\n}\n\nconst { Header: AntHeader } = Layout\n\nconst Header: FC<IHeaderProps> = (props: IHeaderProps) => {\n  const user = useShallowEqualSelector((state) => state.auth.user) as UserDTO\n  const activeChannel = useShallowEqualSelector(\n    (state) => state.chat.activeChannel\n  ) as any\n\n  const { onSidebarToggle, sidebarCollapsed } = props\n\n  const onTriggerClick = () => {\n    onSidebarToggle(!sidebarCollapsed)\n  }\n\n  const menuTrigger = sidebarCollapsed ? (\n    <MenuUnfoldOutlined\n      style={{ fontSize: '20px', padding: '22px' }}\n      className=\"trigger\"\n      onClick={onTriggerClick}\n      label=\"Свернуть\"\n    />\n  ) : (\n    <MenuFoldOutlined\n      style={{ fontSize: '20px', padding: '22px' }}\n      className=\"trigger\"\n      onClick={onTriggerClick}\n    />\n  )\n\n  const activeChannelLabel = activeChannel && (\n    <div className=\"active-channel\">\n      <Text className=\"active-channel-text\">{activeChannel.name}</Text>\n      {activeChannel.type === 'channel' ? (\n        <Text className=\"active-channel-text\" type=\"secondary\">\n          5 участников\n        </Text>\n      ) : (\n        <Text className=\"active-channel-text\" type=\"secondary\">\n          был(а) 1 час назад\n        </Text>\n      )}\n    </div>\n  )\n\n  return (\n    <AntHeader className=\"header background-white\">\n      <PrivateContainer>\n        {menuTrigger}\n        {activeChannelLabel}\n      </PrivateContainer>\n\n      <div className=\"header-menu\">\n        <MainMenu />\n        <PrivateContainer>\n          <span className=\"header-username\">{user?.name}</span>\n          <UserMenu />\n        </PrivateContainer>\n      </div>\n    </AntHeader>\n  )\n}\n\nexport { Header }\n","import { FC } from 'react'\nimport { Scrollbars } from 'react-custom-scrollbars'\n\nconst renderTrackVertical = ({ style, ...ownProps }) => (\n  <div\n    {...ownProps}\n    className=\"scrollTrackVertical\"\n    style={{\n      ...style,\n      backgroundColor: '#E5E5E5',\n      right: '2px',\n      bottom: '2px',\n      top: '2px',\n      borderRadius: '3px'\n    }}\n  />\n)\n\nconst renderThumbVertical = ({ style, ...ownProps }) => (\n  <div\n    {...ownProps}\n    className=\"scrollThumbVertical\"\n    style={{\n      ...style,\n      borderRadius: '4px',\n      boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.16)',\n      backgroundColor: '#9A9A9A'\n    }}\n  />\n)\n\ninterface IScrollbarProps {\n  style?: { [key: string]: string | number }\n}\n\nconst Scrollbar: FC<IScrollbarProps> = (props) => {\n  const { children, style } = props\n  return (\n    <Scrollbars\n      style={style}\n      hideTracksWhenNotNeeded\n      autoHide\n      autoHideTimeout={400}\n      renderTrackVertical={renderTrackVertical}\n      renderThumbVertical={renderThumbVertical}\n    >\n      {children}\n    </Scrollbars>\n  )\n}\n\nexport { Scrollbar }\n","import { FC, useState } from 'react'\nimport { Form, Input, message, Button, Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { ModalWindow } from 'containers/ModalWindow'\nimport { PhotoUploader } from 'components/PhotoUploader'\nimport { UserDTO } from 'services/user'\nimport { useActions } from 'hooks/useActions'\nimport { setActiveChannel, addChannel } from 'modules/Chat/actions'\nimport { changeCreateChannelModalState } from 'modules/Modals/actions'\nimport { chatService } from 'services/chat'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\nimport { WS } from 'services/socket'\n\ninterface IFormValues {\n  name: string\n  description?: string\n  photo?: string\n}\n\ninterface ICreateChannelProps {}\n\nconst CreateChannel: FC<ICreateChannelProps> = () => {\n  const { createChannel } = useShallowEqualSelector(\n    (state) => state.modals\n  ) as any\n  const user = useShallowEqualSelector((state) => state.auth.user) as UserDTO\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState(false)\n  const [photo, setPhoto] = useState(null)\n  const [\n    dispatchActiveChannel,\n    dispatchAddChannel,\n    dispatchChangeCreateChannelModalState\n  ] = useActions(\n    [setActiveChannel, addChannel, changeCreateChannelModalState],\n    null\n  )\n\n  const onFinish = async (values: IFormValues) => {\n    try {\n      const { name, description } = values\n      setLoading(true)\n\n      const {\n        type,\n        message: serverMessage,\n        data\n      } = await chatService.createChannel({\n        name,\n        description,\n        photo,\n        ownerId: user.id\n      })\n\n      if (serverMessage) {\n        if (type === 'success') {\n          message.success(serverMessage)\n        }\n        if (type === 'error') {\n          message.error(serverMessage)\n          setLoading(false)\n          return\n        }\n      }\n\n      const activeChannelPayload = { id: data.channelId, name, type: 'channel' }\n\n      dispatchAddChannel({\n        ...activeChannelPayload,\n        ownerId: user.id,\n        photo,\n        members: [user.id]\n      })\n      dispatchActiveChannel(activeChannelPayload)\n      WS.subscribeToChannel(data.channelId)\n\n      setLoading(false)\n      dispatchChangeCreateChannelModalState(false)\n    } catch (error) {\n      setLoading(false)\n      message.error(error.message)\n    }\n  }\n\n  const resetForm = () => dispatchChangeCreateChannelModalState(false)\n\n  return (\n    <ModalWindow\n      title=\"Создать канал\"\n      visible={createChannel}\n      onCancel={() => dispatchChangeCreateChannelModalState(false)}\n    >\n      <PhotoUploader onChangePhoto={(imageUrl) => setPhoto(imageUrl)} />\n      <Form\n        form={form}\n        name=\"createChannel\"\n        className=\"create-channel-form\"\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[\n            { required: true, message: 'Введите название канала' },\n            { max: 20, message: 'Не более 20 символов' }\n          ]}\n        >\n          <Input placeholder=\"Название канала\" />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          rules={[{ max: 50, message: 'Не более 50 символов' }]}\n        >\n          <Input placeholder=\"Описание (не обязательно)\" type=\"textarea\" />\n        </Form.Item>\n        <div className=\"form-footer\">\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n          <Button key=\"back\" onClick={resetForm} disabled={loading}>\n            Отмена\n          </Button>\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={loading}\n          >\n            Создать\n          </Button>\n        </div>\n      </Form>\n    </ModalWindow>\n  )\n}\n\nexport { CreateChannel }\n","import { FC, useState } from 'react'\nimport { Form, Input, message, Button, Spin, Typography } from 'antd'\nimport { LoadingOutlined, MailOutlined } from '@ant-design/icons'\nimport { ModalWindow } from 'containers/ModalWindow'\nimport { userService, UserDTO } from 'services/user'\nimport { useActions } from 'hooks/useActions'\nimport { addContact } from 'modules/Chat/actions'\nimport { changeAddContactModalState } from 'modules/Modals/actions'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\n\nconst { Text } = Typography\n\ninterface IFormValues {\n  email: string\n}\n\ninterface IAddContactProps {}\n\nconst AddContact: FC<IAddContactProps> = () => {\n  const { addContact: addContactModalState } = useShallowEqualSelector(\n    (state) => state.modals\n  ) as any\n  const user = useShallowEqualSelector((state) => state.auth.user) as UserDTO\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState(false)\n  const [dispatchChangeAddContactModalState, dispatchAddContact] = useActions(\n    [changeAddContactModalState, addContact],\n    null\n  )\n\n  const onFinish = async (values: IFormValues) => {\n    try {\n      const { email } = values\n      setLoading(true)\n\n      const {\n        type,\n        message: serverMessage,\n        data\n      } = await userService.addContact({\n        from: user.id,\n        email\n      })\n\n      if (serverMessage) {\n        if (type === 'success') {\n          message.success(serverMessage)\n        }\n        if (type === 'error') {\n          message.error(serverMessage)\n          setLoading(false)\n          return\n        }\n      }\n\n      dispatchAddContact(data)\n\n      setLoading(false)\n      dispatchChangeAddContactModalState(false)\n    } catch (error) {\n      setLoading(false)\n      message.error(error.message)\n    }\n  }\n\n  return (\n    <ModalWindow\n      title=\"Добавить контакт\"\n      visible={addContactModalState}\n      onCancel={() => dispatchChangeAddContactModalState(false)}\n    >\n      <Text>Введите Email контакта, которого Вы хотели добавить</Text>\n      <Form\n        form={form}\n        name=\"addContact\"\n        className=\"add-contact-form\"\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: 'email',\n              min: 4,\n              message: 'Некорректный email'\n            }\n          ]}\n        >\n          <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n        </Form.Item>\n\n        <div className=\"form-footer\">\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n          <Button\n            key=\"back\"\n            onClick={() => dispatchChangeAddContactModalState(false)}\n            disabled={loading}\n          >\n            Отмена\n          </Button>\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={loading}\n          >\n            Добавить\n          </Button>\n        </div>\n      </Form>\n    </ModalWindow>\n  )\n}\n\nexport { AddContact }\n","import { FC } from 'react'\nimport { Menu, Dropdown } from 'antd'\nimport {\n  MenuOutlined,\n  UserAddOutlined,\n  UsergroupAddOutlined,\n  ContactsOutlined,\n  SettingOutlined\n} from '@ant-design/icons'\nimport { useActions } from 'hooks/useActions'\nimport {\n  changeCreateChannelModalState,\n  changeAddContactModalState\n} from 'modules/Modals/actions'\nimport { CreateChannel } from 'components/Modals/CreateChannel'\nimport { AddContact } from 'components/Modals/AddContact'\n\nexport interface ISidebarMenuProps {}\n\nconst SidebarMenu: FC<ISidebarMenuProps> = () => {\n  const [\n    dispatchChangeCreateChannelModalState,\n    dispatchChangeAddContactModalState\n  ] = useActions(\n    [changeCreateChannelModalState, changeAddContactModalState],\n    null\n  )\n\n  const handleMenuClick = (event) => {\n    const { key } = event\n\n    switch (key) {\n      case 'createChannel':\n        dispatchChangeCreateChannelModalState(true)\n        break\n      case 'addContact':\n        dispatchChangeAddContactModalState(true)\n        break\n      default:\n        break\n    }\n  }\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"createChannel\" icon={<UsergroupAddOutlined />}>\n        Создать канал\n      </Menu.Item>\n      <Menu.Item key=\"addContact\" icon={<UserAddOutlined />}>\n        Добавить контакт\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"contacts\" icon={<ContactsOutlined />}>\n        Контакты\n      </Menu.Item>\n      <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n        Настройки\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <MenuOutlined className=\"sidebar-icon\" />\n      </Dropdown>\n      <CreateChannel />\n      <AddContact />\n    </>\n  )\n}\n\nexport { SidebarMenu }\n","import { FC, useState } from 'react'\nimport { Layout, Menu, Avatar } from 'antd'\nimport {\n  LockOutlined,\n  UnlockOutlined,\n  MessageFilled,\n  PlusCircleOutlined\n} from '@ant-design/icons'\nimport { useEscape } from 'hooks/useEscape'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\nimport { setActiveChannel } from 'modules/Chat/actions'\nimport { useActions } from 'hooks/useActions'\nimport { IChannelData, IContactData } from 'components/Chat/Messages'\nimport {\n  changeCreateChannelModalState,\n  changeAddContactModalState\n} from 'modules/Modals/actions'\nimport { Scrollbar } from 'containers/Scrollbar'\nimport { SidebarMenu } from './SidebarMenu'\n\nconst { Sider } = Layout\n\ninterface ISidebarProps {\n  sidebarCollapsed: boolean\n  onSidebarToggle: (isCollapsed: boolean) => void\n}\n\nconst Sidebar: FC<ISidebarProps> = (props: ISidebarProps) => {\n  const [sidebarLocked, setSidebarLocked] = useState(true)\n  const { sidebarCollapsed, onSidebarToggle } = props\n  const [\n    dispatchActiveChannel,\n    dispatchChangeCreateChannelModalState,\n    dispatchChangeAddContactModalState\n  ] = useActions(\n    [\n      setActiveChannel,\n      changeCreateChannelModalState,\n      changeAddContactModalState\n    ],\n    null\n  )\n  const chat = useShallowEqualSelector((state) => state.chat) as any\n  const { activeChannel, channels, contacts } = chat\n\n  useEscape(() => {\n    if (!activeChannel) return\n    dispatchActiveChannel(null)\n  })\n\n  const onClickMenu = ({ key }) => {\n    if (activeChannel) {\n      const { id, type } = activeChannel\n      if (key === `${type}-${id}`) return\n    }\n\n    const [channelType, channelId] = key.split('-')\n    const place = channelType === 'channel' ? channels : contacts\n    const { name, type } = place[channelId]\n\n    const intChannelId = parseInt(channelId, 10)\n    dispatchActiveChannel({ id: intChannelId, name, type })\n\n    if (!sidebarLocked) {\n      onSidebarToggle(true)\n    }\n  }\n\n  const selectedMenuKey = activeChannel\n    ? [`${activeChannel.type}-${activeChannel.id}`]\n    : []\n\n  return (\n    <>\n      <Sider\n        trigger={null}\n        collapsed={sidebarCollapsed}\n        collapsedWidth={0}\n        className=\"sider\"\n        theme=\"dark\"\n        width=\"230\"\n        style={{\n          overflow: 'auto',\n          height: '100vh'\n        }}\n      >\n        <div className=\"sidebar-top\">\n          <SidebarMenu />\n          {sidebarLocked ? (\n            <LockOutlined\n              title=\"Отмена фиксации\"\n              className=\"sidebar-icon\"\n              onClick={() => setSidebarLocked(false)}\n            />\n          ) : (\n            <UnlockOutlined\n              title=\"Фиксировать меню\"\n              className=\"sidebar-icon\"\n              onClick={() => setSidebarLocked(true)}\n            />\n          )}\n        </div>\n\n        <div className=\"channels-menu\">\n          <div className=\"sidebar-top\">\n            <span className=\"channels-menu-title\">Каналы</span>\n            <PlusCircleOutlined\n              className=\"sidebar-icon\"\n              title=\"Создать канал\"\n              onClick={() => dispatchChangeCreateChannelModalState(true)}\n            />\n          </div>\n\n          {(channels && Object.keys(channels).length && (\n            <Scrollbar style={{ height: 'calc(50vh - 100px)' }}>\n              <Menu\n                theme=\"dark\"\n                mode=\"inline\"\n                selectedKeys={selectedMenuKey}\n                onClick={onClickMenu}\n              >\n                {Object.entries(channels as IChannelData[]).map(\n                  ([channelId, channel]) => (\n                    <Menu.Item\n                      className=\"channels-menu-item\"\n                      style={{ height: '50px' }}\n                      key={`${channel.type}-${channelId}`}\n                    >\n                      {channel.photo ? (\n                        <Avatar\n                          size={40}\n                          className=\"channel-photo\"\n                          src={channel.photo}\n                        />\n                      ) : (\n                        <Avatar\n                          size={40}\n                          className=\"channel-photo\"\n                          icon={<MessageFilled style={{ color: '#fefefe' }} />}\n                        />\n                      )}\n\n                      <span className=\"channel-name\">{channel.name}</span>\n                    </Menu.Item>\n                  )\n                )}\n              </Menu>\n            </Scrollbar>\n          )) || <p className=\"nocontent\">нет каналов</p>}\n        </div>\n\n        <div className=\"contacts-menu\">\n          <div className=\"sidebar-top\">\n            <span className=\"contacts-menu-title\">Контакты</span>\n            <PlusCircleOutlined\n              className=\"sidebar-icon\"\n              title=\"Добавить контакт\"\n              onClick={() => dispatchChangeAddContactModalState(true)}\n            />\n          </div>\n          {(contacts && Object.keys(contacts).length && (\n            <Scrollbar style={{ height: 'calc(50vh - 100px)' }}>\n              <Menu\n                theme=\"dark\"\n                mode=\"inline\"\n                selectedKeys={selectedMenuKey}\n                onClick={onClickMenu}\n              >\n                {Object.entries(contacts as IContactData[]).map(\n                  ([contactId, contact]) => (\n                    <Menu.Item\n                      className=\"contacts-menu-item\"\n                      style={{ height: '50px' }}\n                      key={`${contact.type}-${contactId}`}\n                    >\n                      {contact.photo ? (\n                        <Avatar\n                          size={40}\n                          className=\"contact-photo\"\n                          src={contact.photo}\n                        />\n                      ) : (\n                        <Avatar\n                          size={40}\n                          className=\"contact-photo\"\n                          icon={<MessageFilled style={{ color: '#fefefe' }} />}\n                        />\n                      )}\n\n                      <span className=\"channel-name\">{contact.name}</span>\n                    </Menu.Item>\n                  )\n                )}\n              </Menu>\n            </Scrollbar>\n          )) || <p className=\"nocontent\">нет контактов</p>}\n        </div>\n      </Sider>\n    </>\n  )\n}\n\nexport { Sidebar }\n","import { useEffect } from 'react'\n\nconst useEscape = (onEscape: () => any) => {\n  useEffect(() => {\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') onEscape()\n    }\n    window.addEventListener('keydown', handleEsc)\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc)\n    }\n  }, [onEscape])\n}\n\nexport { useEscape }\n","import { FC } from 'react'\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom'\r\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\r\nimport { IRootState } from 'modules'\r\n\r\ninterface IPrivateRouteProps extends RouteProps {\r\n  component?: any\r\n  children?: any\r\n}\r\n\r\nconst PrivateRoute: FC<IPrivateRouteProps> = ({\r\n  component: Component,\r\n  children,\r\n  ...rest\r\n}) => {\r\n  const user = useShallowEqualSelector((state: IRootState) => state.auth.user)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) => {\r\n        if (user === null) return null\r\n\r\n        if (user === false) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/auth/login',\r\n                state: { from: routeProps.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n\r\n        if (Component) {\r\n          return <Component {...routeProps} />\r\n        }\r\n\r\n        return children\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.defaultProps = {\r\n  component: undefined\r\n}\r\n\r\nexport { PrivateRoute }\r\n","import {\n  apiService as api,\n  AUTH_TOKEN_STORAGE_KEY,\n  IServerResponse\n} from './api'\n\nexport interface UserLoginRequestDTO {\n  email: string\n  password: string\n}\n\nexport interface UserCreateRequestDTO {\n  name: string\n  email: string\n  password: string\n}\n\nexport interface UserRecoverPasswordRequestDTO {\n  email: string\n}\n\nexport interface CheckSecretRequestDTO {\n  code: string\n  secretType: string\n}\n\nexport interface ChangePasswordRequestDTO {\n  code: string\n  password: string\n}\n\nexport interface UserFetchByTokenRequestDTO {\n  token: string\n}\n\nconst authService = {\n  /** Регистрация нового пользователя */\n  register: async (payload: UserCreateRequestDTO): Promise<IServerResponse> =>\n    api.send({\n      method: 'put',\n      endpoint: '/api/v1/auth/register',\n      payload\n    }),\n\n  /** Активация пользователя по коду из письма */\n  activate: async (code: string): Promise<IServerResponse> =>\n    api.send({\n      method: 'patch',\n      endpoint: `/api/v1/auth/activate/${code}`\n    }),\n\n  /** Вход пользователя в систему и полуение токена */\n  login: async (payload: UserLoginRequestDTO): Promise<IServerResponse> =>\n    api.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/login',\n      payload\n    }),\n\n  /** Попытка получить объект пользователя по токену */\n  fetchByToken: async (\n    payload: UserFetchByTokenRequestDTO\n  ): Promise<IServerResponse> =>\n    api.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/fetch-by-token',\n      payload\n    }),\n\n  /** Запрос на изменение пароля, отправка письма со ссылкой на email */\n  recover: async (\n    payload: UserRecoverPasswordRequestDTO\n  ): Promise<IServerResponse> =>\n    api.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/recover',\n      payload\n    }),\n\n  /** Проверка секретного ключа для доступа к форме восстановления пароля */\n  checkSecret: async (\n    payload: CheckSecretRequestDTO\n  ): Promise<IServerResponse> =>\n    api.send({\n      method: 'post',\n      endpoint: '/api/v1/auth/check-secret',\n      payload\n    }),\n\n  /** Изменение пароля пользователя */\n  changePassword: async (\n    payload: ChangePasswordRequestDTO\n  ): Promise<IServerResponse> =>\n    api.send({\n      method: 'patch',\n      endpoint: '/api/v1/auth/change-password',\n      payload\n    }),\n\n  getToken: (): string | null => localStorage.getItem(AUTH_TOKEN_STORAGE_KEY),\n\n  setToken: (payload: string): void =>\n    localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, payload),\n\n  removeToken: (): void => localStorage.removeItem(AUTH_TOKEN_STORAGE_KEY)\n}\n\nexport { authService }\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport { MailOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useActions } from 'hooks/useActions'\nimport { authService } from 'services/auth'\nimport { userLoginRequest } from 'modules/Auth/actions'\n\ninterface IFormValues {\n  email: string\n  password: string\n}\n\nconst Login: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n  const [dispatchUserLoginRequest] = useActions([userLoginRequest], null)\n  const history = useHistory()\n\n  const onFinish = async (values: IFormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { email, password } = values\n      const { type, message, token, data } = await authService.login({\n        email,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      dispatchUserLoginRequest({ data, token })\n      setLoading(false)\n\n      history.push('/')\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Вход в систему\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Form\n          form={form}\n          name=\"login\"\n          className=\"login-form\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: 'email',\n                min: 4,\n                message: 'Некорректный email'\n              }\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, min: 6, message: 'Минимум 6 символов' }]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Form.Item name=\"register\" noStyle>\n              <Link to=\"/auth/register\">Регистрация</Link>\n            </Form.Item>\n\n            <Link className=\"link-recover\" to=\"/auth/recover\">\n              Забыли пароль?\n            </Link>\n          </Form.Item>\n\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n\n          <Button size=\"large\" type=\"primary\" htmlType=\"submit\" block>\n            Войти\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport { Login }\n","import { FC, useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { Form, Input, Button, Card, Alert } from 'antd'\nimport { LockOutlined } from '@ant-design/icons'\nimport { authService } from 'services/auth'\n\ninterface IChangePasswordParams {\n  code?: string\n}\n\ninterface IFormValues {\n  password: string\n  confirmPassword: string\n}\n\nconst ChangePassword: FC = () => {\n  const { code }: IChangePasswordParams = useParams()\n  const emptyMessage = { type: '', message: '' }\n  const [alert, setAlert] = useState(emptyMessage)\n  const [secretError, setSecretError] = useState(false)\n  const [changeSuccess, setChangeSuccess] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const checkSecret = async () => {\n      const { type, message } = await authService.checkSecret({\n        code,\n        secretType: 'RECOVER_PASSWORD'\n      })\n      if (type === 'error') {\n        setAlert({ type, message })\n        setSecretError(true)\n      }\n    }\n\n    if (\n      code.match(\n        /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i\n      )\n    ) {\n      checkSecret()\n    } else {\n      setAlert({ type: 'error', message: 'Неверный секретный код!' })\n      setSecretError(true)\n    }\n  }, [code])\n\n  const onFinish = async (values: IFormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { password } = values\n      const { type, message } = await authService.changePassword({\n        code,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      setChangeSuccess(true)\n      setLoading(false)\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Изменение пароля\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n\n        {changeSuccess && (\n          <p>\n            Теперь Вы можете <Link to=\"/auth/login\">Войти</Link> в приложение\n          </p>\n        )}\n\n        {!secretError && !changeSuccess && (\n          <>\n            <p>Придумайте новый пароль</p>\n            <Form\n              name=\"change-password-request\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: 'Введите пароль!' }]}\n              >\n                <Input.Password\n                  placeholder=\"Пароль\"\n                  prefix={<LockOutlined />}\n                  size=\"large\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirmPassword\"\n                dependencies={['password']}\n                rules={[\n                  { required: true, message: 'Введите подтверждение пароля!' },\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      if (!value || getFieldValue('password') === value) {\n                        return Promise.resolve()\n                      }\n                      return Promise.reject(\n                        new Error('Пароли должны совпадать!')\n                      )\n                    }\n                  })\n                ]}\n              >\n                <Input.Password\n                  placeholder=\"Пароль еще раз\"\n                  prefix={<LockOutlined />}\n                  size=\"large\"\n                />\n              </Form.Item>\n\n              <Button\n                className=\"submit-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                size=\"large\"\n                block\n                disabled={loading}\n              >\n                Изменить пароль\n              </Button>\n            </Form>\n          </>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport { ChangePassword }\n","import { FC, useState, useEffect } from 'react'\nimport { Card, Alert } from 'antd'\nimport { Link, useParams } from 'react-router-dom'\nimport { authService } from 'services/auth'\n\ninterface IActivationParams {\n  code?: string\n}\n\nconst Activation: FC = () => {\n  const { code }: IActivationParams = useParams()\n  const emptyMessage = { type: '', message: '' }\n  const [alert, setAlert] = useState(emptyMessage)\n\n  useEffect(() => {\n    const activateUser = async () => {\n      const { type, message } = await authService.activate(code)\n      if (message) {\n        setAlert({ type, message })\n      }\n    }\n    activateUser()\n  }, [code])\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Активация нового пользователя\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Link className=\"login-link\" to=\"/auth/login\">\n          Вход\n        </Link>\n        <Link className=\"link-recover\" to=\"/auth/recover\">\n          Восстановить пароль\n        </Link>\n      </Card>\n    </div>\n  )\n}\n\nexport { Activation }\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailOutlined,\n  LoadingOutlined\n} from '@ant-design/icons'\nimport { authService } from 'services/auth'\n\ninterface IFormValues {\n  name: string\n  email: string\n  password: string\n}\n\nconst Register: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values: IFormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { name, email, password } = values\n      const { type, message } = await authService.register({\n        name,\n        email,\n        password\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      form.resetFields()\n      setLoading(false)\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Регистрация\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        <Form\n          form={form}\n          name=\"register\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          validateTrigger=\"onBlur\"\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message:\n                  \"Имя должно содержать минимум 4 символа английского или русского алфавита, допустимы цифры и знаки '- _'\",\n                pattern: /^[a-zA-Zа-яА-ЯёЁ0-9-_\\s]{4,}$/\n              }\n            ]}\n          >\n            <Input placeholder=\"Имя\" size=\"large\" prefix={<UserOutlined />} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[\n              { required: true, type: 'email', message: 'Некорректный email' }\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email\" size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Введите пароль! Минимум 6 символов.',\n                min: 6\n              }\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm-password\"\n            dependencies={['password']}\n            rules={[\n              {\n                required: true,\n                message: 'Введите подтверждение пароля! Минимум 6 символов.',\n                min: 6\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('Пароли должны совпадать!'))\n                }\n              })\n            ]}\n          >\n            <Input.Password\n              placeholder=\"Пароль еще раз\"\n              prefix={<LockOutlined />}\n              size=\"large\"\n            />\n          </Form.Item>\n\n          {loading && (\n            <Spin\n              className=\"center\"\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n              delay={500}\n            />\n          )}\n\n          <Button\n            className=\"submit-button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            block\n            disabled={loading}\n          >\n            Зарегистрироваться\n          </Button>\n        </Form>\n      </Card>\n    </div>\n  )\n}\n\nexport { Register }\n","import { FC, useState } from 'react'\nimport { Form, Input, Button, Card, Alert, Spin } from 'antd'\nimport { MailOutlined, LoadingOutlined } from '@ant-design/icons'\nimport { authService } from 'services/auth'\n\ninterface IFormValues {\n  email: string\n}\n\nconst Recover: FC = () => {\n  const emptyMessage = { type: '', message: '' }\n  const [form] = Form.useForm()\n  const [alert, setAlert] = useState(emptyMessage)\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values: IFormValues) => {\n    try {\n      setAlert(emptyMessage)\n      setLoading(true)\n\n      const { email } = values\n      const { type, message } = await authService.recover({\n        email\n      })\n\n      if (message) {\n        setAlert({ type, message })\n        setLoading(false)\n        if (type === 'error') return\n      }\n\n      form.resetFields()\n      setLoading(false)\n    } catch (error) {\n      setAlert(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <Card className=\"card\" title=\"Восстановление пароля\">\n        {alert.message && (\n          <Alert\n            className=\"alert\"\n            message={alert.message}\n            type={alert.type as any}\n          />\n        )}\n        {alert.type !== 'success' && (\n          <>\n            <p>\n              Укажите email, указанный при регистрации и мы вышлем на него\n              ссылку для восстановления пароля.\n            </p>\n            <Form\n              form={form}\n              name=\"recover\"\n              className=\"login-form\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n              validateTrigger=\"onBlur\"\n            >\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  {\n                    required: true,\n                    type: 'email',\n                    message: 'Некорректный email!'\n                  }\n                ]}\n              >\n                <Input\n                  prefix={<MailOutlined />}\n                  placeholder=\"Email\"\n                  size=\"large\"\n                />\n              </Form.Item>\n\n              {loading && (\n                <Spin\n                  className=\"center\"\n                  indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n                  delay={500}\n                />\n              )}\n\n              <Button\n                size=\"large\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                block\n                disabled={loading}\n              >\n                Восстановить пароль\n              </Button>\n            </Form>\n          </>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport { Recover }\n","import { FC } from 'react'\nimport { Empty } from 'antd'\nimport { Scrollbar } from 'containers/Scrollbar'\n\ninterface IMessagesProps {\n  channel: IChannelData\n}\n\nexport interface IChannelData {\n  id: number | string\n  ownerId: number\n  name: string\n  type: string\n  photo: string\n  members: string[]\n  messages: IMessage[]\n}\n\nexport interface IContactData {\n  name: string\n  type: string\n  photo: string\n  messages: IMessage[]\n}\n\ninterface IMessage {\n  id: string\n  text: string\n  from: string | number // todo userId\n  type?: string\n}\n\nconst Messages: FC<IMessagesProps> = ({\n  channel: { messages }\n}: IMessagesProps) =>\n  (!messages?.length && (\n    <div className=\"chat-empty\">\n      <Empty description=\"Сообщений нет\" />\n    </div>\n  )) || (\n    <div className=\"chat-window\">\n      <Scrollbar style={{ height: 'calc(100vh - 104px)' }}>\n        {messages.map(({ id, text, from }) => (\n          <div key={id}>\n            <strong>{from}</strong>: {text}\n          </div>\n        ))}\n      </Scrollbar>\n    </div>\n  )\n\nexport { Messages }\n","import { FC, memo } from 'react'\nimport { Form, Input, Button } from 'antd'\nimport { SendOutlined } from '@ant-design/icons'\n\ninterface IFormValues {\n  text: string\n}\n\ninterface IChatInputProps {\n  sendMessage: (text: string) => void\n}\n\nconst InputMessage: FC<IChatInputProps> = memo(({ sendMessage }) => {\n  const [form] = Form.useForm()\n\n  const onFinish = async (values: IFormValues) => {\n    try {\n      const { text } = values\n      sendMessage(text)\n      form.resetFields()\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error)\n    }\n  }\n  return (\n    <div className=\"chat-input\">\n      <Form size=\"large\" className=\"input-form\" form={form} onFinish={onFinish}>\n        <Form.Item className=\"input-messaage\" required name=\"text\">\n          <Input autoFocus placeholder=\"Введите сообщение\" />\n        </Form.Item>\n        <Form.Item className=\"send-button\">\n          <Button htmlType=\"submit\" type=\"primary\" icon={<SendOutlined />}>\n            Отправить\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n})\n\nexport { InputMessage }\n","import { useCallback } from 'react'\nimport { nanoid } from 'nanoid'\nimport { UserDTO } from 'services/user'\nimport { Empty } from 'antd'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\nimport { sendChannelMessage, sendContactMessage } from 'modules/Chat/actions'\nimport { useActions } from 'hooks/useActions'\nimport { WS } from 'services/socket'\nimport { Messages } from './Messages'\nimport { InputMessage } from './InputMessage'\n\nconst Chat = () => {\n  const user = useShallowEqualSelector((state) => state.auth.user) as UserDTO\n  const [dispatchSendChannelMessage, dispatchSendContactMessage] = useActions(\n    [sendChannelMessage, sendContactMessage],\n    null\n  )\n  const { activeChannel, channels, contacts } = useShallowEqualSelector(\n    (state) => state.chat\n  ) as any\n\n  const onSendMessage = useCallback(\n    (text: string): void => {\n      if (!activeChannel) return\n      if (!text) return\n\n      const id = nanoid()\n      const { id: userId, name } = user\n      const message = { id, text, from: `${name}(${userId})` }\n      const payload = {\n        activeChannelId: activeChannel.id,\n        message\n      }\n\n      if (activeChannel.type === 'channel') {\n        dispatchSendChannelMessage(payload)\n        WS.sendChannelMessage(payload)\n      }\n\n      if (activeChannel.type === 'contact') {\n        dispatchSendContactMessage(payload)\n        WS.sendContactMessage({ from: user.id, to: activeChannel.id, message })\n      }\n    },\n    [\n      activeChannel,\n      dispatchSendChannelMessage,\n      dispatchSendContactMessage,\n      user\n    ]\n  )\n\n  if (!user || !activeChannel || (!channels && !contacts))\n    return (\n      <div className=\"chat-empty\">\n        <Empty description=\"Выберите канал для начала общения!\" />\n      </div>\n    )\n\n  const { type, id } = activeChannel\n  const channelData = type === 'channel' ? channels[id] : contacts[id]\n\n  if (!channelData) return null\n\n  return (\n    <>\n      <Messages channel={channelData} />\n      <InputMessage sendMessage={onSendMessage} />\n    </>\n  )\n}\n\nexport { Chat }\n","import { FC } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport { PrivateRoute } from 'containers/PrivateRoute'\nimport { Login } from 'components/Auth/Login'\nimport { ChangePassword } from 'components/Auth/ChangePassword'\nimport { Activation } from 'components/Auth/Activation'\nimport { Register } from 'components/Auth/Register'\nimport { Recover } from 'components/Auth/Recover'\nimport { Chat } from '../Chat'\n\nconst Routes: FC = () => (\n  <Switch>\n    <PrivateRoute exact path=\"/\" component={Chat} />\n    <Route path=\"/auth/login\" component={Login} />\n    <Route path=\"/auth/register\" component={Register} />\n    <Route path=\"/auth/activation/:code\" component={Activation} />\n    <Route path=\"/auth/recover\" component={Recover} />\n    <Route path=\"/auth/change-password/:code\" component={ChangePassword} />\n    <Route path=\"*\">\n      <Redirect to=\"/auth/login\" />\n    </Route>\n  </Switch>\n)\n\nexport { Routes }\n","import { FC, useState, useEffect, useRef } from 'react'\nimport { UserDTO } from 'services/user'\nimport { Layout } from 'antd'\nimport { PrivateContainer } from 'containers/Private'\nimport { sendChannelMessage, sendContactMessage } from 'modules/Chat/actions'\nimport { useShallowEqualSelector } from 'hooks/useShallowEqualSelector'\nimport { useActions } from 'hooks/useActions'\nimport { WS } from 'services/socket'\nimport { Header } from './Header'\nimport { Sidebar } from './Sidebar'\nimport { Routes } from '../Routes'\n\nconst { Content } = Layout\n\nconst App: FC = () => {\n  const [needRecreateRef, setNeedRecreateRef] = useState(0)\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false)\n  // const [onlineUsers, setOnlineUsers] = useState([])\n  const SR = useRef(null)\n  const [dispatchSendChannelMessage, dispatchSendContactMessage] = useActions(\n    [sendChannelMessage, sendContactMessage],\n    null\n  )\n  const activeChannel = useShallowEqualSelector(\n    (state) => state.chat.activeChannel\n  ) as any\n  const user = useShallowEqualSelector((state) => state.auth.user) as UserDTO\n\n  const onSidebarToggle = (isCollapsed: boolean) => {\n    setSidebarCollapsed(isCollapsed)\n  }\n\n  useEffect(() => {\n    if (!WS.socket) return null\n    SR.current = WS.socket\n\n    // Correct reconnection after server emits disconnected event\n    WS.socket.on('disconnect', (reason: string) => {\n      if (reason === 'transport error' || reason === 'ping timeout') {\n        if (!user) return\n        WS.disconnect()\n        WS.connect(user)\n        setNeedRecreateRef((state) => state + 1)\n      }\n    })\n\n    WS.socket.on('users:connected', () => {\n      // users.forEach((user) => {\n      // user.self = user.userId === WS.socket.id\n      // initReactiveProperties(user)\n      // dispatchUpdateUsersOnline(users)\n      // })\n      // put the current user first, and then sort by username\n      // setOnlineUsers(\n      //   users.sort((a, b) => {\n      //     if (a.self) return -1\n      //     if (b.self) return 1\n      //     if (a.username < b.username) return -1\n      //     return a.username > b.username ? 1 : 0\n      //   })\n      // )\n      // dispatchUpdateUsersOnline(users)\n      // eslint-disable-next-line no-console\n      // console.log(onlineUsers)\n    })\n\n    SR.current.on(\n      'channel:message:broadcast',\n      ({ activeChannelId: channelId, message }) => {\n        dispatchSendChannelMessage({\n          activeChannelId: channelId,\n          message\n        })\n      }\n    )\n\n    SR.current.on('contact:message:private', ({ message, from }) => {\n      // eslint-disable-next-line no-console\n      console.log('contact:message:private', message, `from: ${from}`)\n\n      dispatchSendContactMessage({\n        activeChannelId: from,\n        message\n      })\n    })\n\n    return () => {\n      SR.current.off('channel:message:broadcast')\n      SR.current.off('contact:message:private')\n    }\n  }, [\n    user,\n    activeChannel,\n    dispatchSendChannelMessage,\n    dispatchSendContactMessage,\n    needRecreateRef\n  ])\n\n  return (\n    <Layout className=\"wrap-layout\">\n      <PrivateContainer>\n        <Sidebar\n          sidebarCollapsed={sidebarCollapsed}\n          onSidebarToggle={onSidebarToggle}\n        />\n      </PrivateContainer>\n\n      <Layout className=\"site-layout\">\n        <Header\n          sidebarCollapsed={sidebarCollapsed}\n          onSidebarToggle={onSidebarToggle}\n        />\n        <Content className=\"content\">\n          <Routes />\n        </Content>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport { App }\n","import { takeLatest, put, call, fork } from 'redux-saga/effects'\r\nimport { authService } from 'services/auth'\r\nimport { WS } from 'services/socket'\r\nimport {\r\n  userLoginRequest,\r\n  userLogoutRequest,\r\n  userFetchSuccess\r\n} from './actions'\r\nimport {\r\n  initChannelsData,\r\n  initContactsData,\r\n  setActiveChannel\r\n} from '../Chat/actions'\r\n\r\n/** login */\r\nexport function* userLoginRequestFlow({ payload: { data: user, token } }) {\r\n  yield put(userFetchSuccess(user))\r\n  yield call([authService, authService.setToken], token)\r\n  const { channels, contacts } = yield call([WS, WS.connect], user)\r\n  yield put(initChannelsData(channels))\r\n  yield put(initContactsData(contacts))\r\n}\r\nexport function* userLoginWatcher() {\r\n  yield takeLatest(userLoginRequest, userLoginRequestFlow)\r\n}\r\n\r\n/** logout */\r\nexport function* userLogoutRequestFlow() {\r\n  yield call([authService, authService.removeToken])\r\n  yield put(userFetchSuccess(false))\r\n  yield put(setActiveChannel(null))\r\n  yield call([WS, WS.disconnect])\r\n}\r\nexport function* userLogoutWatcher() {\r\n  yield takeLatest(userLogoutRequest, userLogoutRequestFlow)\r\n}\r\n\r\nconst authSagas = function* generator() {\r\n  yield fork(userLoginWatcher)\r\n  yield fork(userLogoutWatcher)\r\n}\r\n\r\nexport { authSagas }\r\n","import { combineReducers } from 'redux'\r\nimport { handleActions } from 'redux-actions'\r\nimport { UserDTO } from 'services/user'\r\nimport { userFetchSuccess, userFetchFailure, userUpdatePhoto } from './actions'\r\n\r\nexport interface IAuthState {\r\n  user: UserDTO\r\n}\r\n\r\nexport const initialState = {\r\n  user: null\r\n}\r\n\r\nconst user = handleActions(\r\n  {\r\n    [userFetchSuccess]: (_state, action) => action.payload,\r\n    [userFetchFailure]: () => false,\r\n    [userUpdatePhoto]: (state, action) => ({ ...state, photo: action.payload })\r\n  },\r\n  null\r\n)\r\n\r\nconst authReducer = combineReducers<IAuthState>({\r\n  user\r\n})\r\n\r\nexport { authReducer }\r\n","import { combineReducers } from 'redux'\r\nimport { handleActions } from 'redux-actions'\r\nimport {\r\n  setActiveChannel,\r\n  initChannelsData,\r\n  initContactsData,\r\n  sendChannelMessage,\r\n  sendContactMessage,\r\n  addChannel,\r\n  addContact\r\n} from './actions'\r\n\r\nexport interface IActiveChannel {\r\n  id: number | null\r\n  name: string\r\n  type: string\r\n}\r\n\r\nexport interface IChatState {\r\n  activeChannel: IActiveChannel\r\n  channels: Object\r\n  contacts: Object\r\n}\r\n\r\nexport const initialState: IChatState = {\r\n  activeChannel: null,\r\n  channels: null,\r\n  contacts: null\r\n}\r\n\r\nconst activeChannel = handleActions(\r\n  {\r\n    [setActiveChannel]: (_state, action) => action.payload\r\n  },\r\n  null\r\n)\r\n\r\nconst addMessage = (state, action) => ({\r\n  ...state,\r\n  [action.payload.activeChannelId]: {\r\n    ...state[action.payload.activeChannelId],\r\n    messages: [\r\n      ...state[action.payload.activeChannelId].messages,\r\n      action.payload.message\r\n    ]\r\n  }\r\n})\r\n\r\nconst channels = handleActions(\r\n  {\r\n    [initChannelsData]: (_state, action) => action.payload,\r\n    [sendChannelMessage]: addMessage,\r\n    [addChannel]: (state, action) => ({\r\n      ...state,\r\n      [action.payload.id]: {\r\n        ownerId: action.payload.ownerId,\r\n        name: action.payload.name,\r\n        members: action.payload.members,\r\n        photo: action.payload.photo,\r\n        type: action.payload.type,\r\n        messages: []\r\n      }\r\n    })\r\n  },\r\n  null\r\n)\r\n\r\nconst contacts = handleActions(\r\n  {\r\n    [initContactsData]: (_state, action) => action.payload,\r\n    [sendContactMessage]: addMessage,\r\n    [addContact]: (_state) => _state\r\n  },\r\n  null\r\n)\r\n\r\nconst chatReducer = combineReducers<IChatState>({\r\n  activeChannel,\r\n  channels,\r\n  contacts\r\n})\r\n\r\nexport { chatReducer }\r\n","import { combineReducers } from 'redux'\nimport { handleActions } from 'redux-actions'\nimport {\n  changeCreateChannelModalState,\n  changeUserProfileModalState,\n  changeAddContactModalState\n} from './actions'\n\nexport interface IModalsState {\n  createChannel: boolean\n  userProfile: boolean\n  addContact: boolean\n}\n\nexport const initialState = {\n  createChannel: false,\n  userProfile: false,\n  addContact: false\n}\n\nconst createChannel = handleActions(\n  { [changeCreateChannelModalState]: (_state, action) => action.payload },\n  false\n)\n\nconst userProfile = handleActions(\n  { [changeUserProfileModalState]: (_state, action) => action.payload },\n  false\n)\n\nconst addContact = handleActions(\n  { [changeAddContactModalState]: (_state, action) => action.payload },\n  false\n)\n\nconst modalsReducer = combineReducers<IModalsState>({\n  createChannel,\n  userProfile,\n  addContact\n})\n\nexport { modalsReducer }\n","import { call, put } from 'redux-saga/effects'\nimport { authService } from 'services/auth'\nimport { WS } from 'services/socket'\nimport { userFetchSuccess, userFetchFailure } from './Auth/actions'\nimport { initChannelsData, initContactsData } from './Chat/actions'\n\n/** Launch saga once when on app start */\nconst launchSaga = function* launchSaga() {\n  try {\n    const token = yield call([authService, authService.getToken])\n\n    if (!token) {\n      yield put(userFetchFailure())\n      return\n    }\n    const { data: user } = yield call([authService, authService.fetchByToken], {\n      token\n    })\n\n    if (!user) {\n      yield call([authService, authService.removeToken])\n      yield put(userFetchFailure())\n      return\n    }\n\n    yield put(userFetchSuccess(user))\n    const { channels, contacts } = yield call([WS, WS.connect], user)\n    yield put(initChannelsData(channels))\n    yield put(initContactsData(contacts))\n  } catch (error) {\n    yield call([authService, authService.removeToken])\n    yield put(userFetchFailure(error))\n  }\n}\n\nexport { launchSaga }\n","import { combineReducers } from 'redux'\nimport { fork } from 'redux-saga/effects'\nimport { authSagas } from 'modules/Auth/sagas'\nimport { authReducer, IAuthState } from 'modules/Auth/reducer'\nimport { chatReducer, IChatState } from 'modules/Chat/reducer'\nimport { modalsReducer, IModalsState } from 'modules/Modals/reducer'\nimport { launchSaga } from 'modules/launchSaga'\n\n// Root state interface\nexport interface IRootState {\n  auth: IAuthState\n  chat: IChatState\n  modals: IModalsState\n}\n\nexport const initialState: IRootState = {\n  auth: { user: null },\n  chat: {\n    activeChannel: null,\n    channels: null,\n    contacts: null\n  },\n  modals: {\n    createChannel: false,\n    userProfile: false,\n    addContact: false\n  }\n}\n\n// Root reducer\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  chat: chatReducer,\n  modals: modalsReducer\n})\n\n// Root saga\nexport function* rootSaga() {\n  yield fork(authSagas)\n  yield fork(launchSaga)\n}\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootReducer, rootSaga } from 'modules'\n\nconst createAppStore = () => {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(\n    rootReducer,\n    compose(composeWithDevTools(applyMiddleware(sagaMiddleware)))\n  )\n\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n\nexport { createAppStore }\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\n// eslint-disable-next-line import/no-default-export\nexport default reportWebVitals\n","import { StrictMode } from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { render } from 'react-dom'\nimport { App } from 'components/App'\nimport { createAppStore } from 'modules/store'\nimport reportWebVitals from 'reportWebVitals'\nimport 'index.scss'\n\nconst store = createAppStore()\n\nrender(\n  <StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}